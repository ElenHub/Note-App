{"version":3,"file":"index.js","sources":["../src/helpers/commonHelpersFunctions.ts","../src/ui-styled-components/common.tsx","../src/ui-components/BasicButton/BasicButton.tsx","../src/ui-components/BasicDatePicker/BasicDatePicker.tsx","../src/ui-components/BasicInput/BasicInput.tsx","../src/ui-components/BasicModal/BasicModal.tsx","../src/ui-components/BasicSelect/BasicSelect.tsx","../src/ui-components/BasicPagination/BasicPagination.tsx","../src/ui-components/BasicTable/TableBody/CustomTableBody.tsx","../src/ui-components/BasicTable/TableHead/CustomTableHead.tsx","../src/ui-components/BasicTable/BasicTable.tsx","../src/ui-components/BoxWithLabel/BoxWithLabel.tsx","../src/ui-components/FilterPanel/FilterPanel.tsx","../src/ui-components/Svg/ArrowLeftSvg.tsx","../src/ui-components/InfoBar/NavigateText/NavigateText.tsx","../src/ui-components/InfoBar/TitleAndButton/TitleAndButton.tsx","../src/ui-components/InfoBar/InfoBar.tsx","../src/ui-components/Svg/LogoutSvg.tsx","../src/ui-components/Svg/MenuBaraSvg.tsx","../src/ui-components/NavBar/NavBar.tsx","../src/ui-components/Svg/AddUserSvg.tsx","../src/ui-components/Svg/BlackTriangleDownSvg.tsx","../src/ui-components/Svg/BlackTriangleUpSvg.tsx","../src/ui-components/Svg/EditSvg.tsx","../src/ui-components/Svg/MoreCircleSvg.tsx","../src/ui-components/Svg/PersonPentagramSvg.tsx","../src/ui-components/Svg/PlusInCircle.tsx","../src/ui-components/Svg/PlusPersonSvg.tsx","../src/ui-components/Svg/RefreshSvg.tsx","../src/ui-components/Svg/SmallBlackCircleSvg.tsx","../src/ui-components/TeamHistoryTable/TeamHistoryTable.tsx","../src/ui-components/ToggleBar/ToggleItem/ToggleItem.tsx","../src/ui-components/ToggleBar/ToggleBar.tsx"],"sourcesContent":["import { TableTitleType } from '../ui-components/BasicTable/BasicTable';\n\n//----------------------------------------createTitle---------------------------------------------\n\n/**\n * Упрощает создание заголовка таблицы\n */\nexport const createTitle = (\n  width: string,\n  value: string,\n  padding?: string\n): TableTitleType => ({ width, value, padding });\n\nexport type StatusTeamPropsType = 'new' | 'on pause' | 'not active' | 'active';\n\n//----------------------------------------chooseColorFromStatus---------------------------------------------\n\nexport const chooseColorFromStatus = (status: StatusTeamPropsType) => {\n  switch (status) {\n    case 'active':\n      return '#2068F8';\n    case 'new':\n      return '#802DD4';\n    case 'on pause':\n      return '#EFA640';\n    case 'not active':\n      return '#737067';\n    default:\n      return '#2068F8';\n  }\n};\n","import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport { Select } from '@mui/material';\r\nimport styled from 'styled-components';\r\n\r\n// -------------------------------------------------Block-----------------------------------------------------\r\n\r\nexport interface BlockProps {\r\n  name: string;\r\n  display?: string;\r\n  width?: string | number;\r\n  minWidth?: string | number;\r\n  height?: string | number;\r\n  margin?: string | number;\r\n  padding?: string | number;\r\n  flexDirection?: string;\r\n  justifyContent?: string;\r\n  alignItems?: string;\r\n  background?: string;\r\n  boxShadow?: string;\r\n  borderRadius?: number | string;\r\n  minHeight?: number | string;\r\n  flexWrap?: string;\r\n  cursor?: string;\r\n  border?: string;\r\n  borderBottom?: string;\r\n  borderTop?: string;\r\n  borderLeft?: string;\r\n  borderRight?: string;\r\n  overflow?: string;\r\n  overflowY?: string;\r\n  overflowX?: string;\r\n  table?: boolean;\r\n}\r\n\r\n/**\r\n * Styled Component ( Block )\r\n * Тег Див , display : flex\r\n * Переиспользуемый див блок на флексах с гибкой настройкой\r\n * Принимает в себя пропсы обычного див элемента и свои кастомные:\r\n * @param {string} name - Имя компоненты, никак не влияет на отрисовку, для удобства навигации\r\n * @param {string} display - тип блока ( по дефолту  = flex) ( не обязательный )\r\n * @param {string | number} width - ширина ( необязательный )\r\n * @param {string | number} minWidth - минимальная ширина ( необязательный )\r\n * @param {string | number} height - высота  ( необязательный )\r\n * @param {string | number} margin - отступы снаружи ( необязательный )\r\n * @param {string | number} padding - отстпу внутри ( необязательный )\r\n * @param {string} justifyContent - расположденеи по главной оси ( необязательный ) default = center\r\n * @param {string} alignItems - расположденеи по второстепенной оси ( необязательный )  default = center\r\n * @param {string} flexDirection - Направлении оси ( необязательный )  default = row\r\n * @param {string} background - задний фон ( необязательный )\r\n * @param {string} boxShadow - boxShadow - тень ( необязательный )\r\n * @param {number | string} borderRadius - Закругление границ блока ( необязательный )\r\n * @param {string} flexWrap - переносы блоков при отстутсвии места ( необязательный )\r\n * @param {string} cursor - курсор при наведение на блок (необзательный)\r\n * @param {string} border - границы блока ( необязательный )\r\n * @param {string} borderBottom - отдельно нижняя граница ( необязательный )\r\n * @param {string} borderTop - отдельно верхняя граница ( необязательный )\r\n * @param {string} borderLeft - отдельно левая граница ( необязательный )\r\n * @param {string} borderRight - отдельно правая     граница ( необязательный )\r\n * @param {string} overflow - режим отображенияя информации не вмещающейся в границы блока( необязательный )\r\n * @param {string} overflow-y - режим отображенияя информации не вмещающейся в границы блока по оси Y( необязательный )\r\n * @param {string} overflow-x - режим отображенияя информации не вмещающейся в границы блока по оси X( необязательный )\r\n */\r\nexport const Block = styled.div`\r\n  display: ${(props: BlockProps) => (props.display ? props.display : 'flex')};\r\n  flex-direction: ${(props: BlockProps) =>\r\n    props.flexDirection ? props.flexDirection : 'row'};\r\n  justify-content: ${(props: BlockProps) =>\r\n    props.justifyContent ? props.justifyContent : 'center'};\r\n  align-items: ${(props: BlockProps) =>\r\n    props.alignItems ? props.alignItems : 'center'};\r\n  width: ${(props: BlockProps) => (props.width ? props.width : 'auto')};\r\n  min-width: ${(props: BlockProps) =>\r\n    props.minWidth ? props.minWidth : 'auto'};\r\n  height: ${(props: BlockProps) => (props.height ? props.height : '100%')};\r\n  min-height: ${(props: BlockProps) =>\r\n    props.minHeight ? props.minHeight : 'auto'};\r\n  padding: ${(props: BlockProps) => (props.padding ? props.padding : 0)};\r\n  margin: ${(props: BlockProps) => (props.margin ? props.margin : 0)};\r\n  background: ${(props: BlockProps) =>\r\n    props.background ? props.background : 'none'};\r\n  box-shadow: ${(props: BlockProps) =>\r\n    props.boxShadow ? props.boxShadow : 'none'};\r\n  border: ${(props: BlockProps) => (props.border ? props.border : '0')};\r\n  flex-wrap: ${(props: BlockProps) =>\r\n    props.flexWrap ? props.flexWrap : 'wrap'};\r\n  border-radius: ${(props: BlockProps) =>\r\n    props.borderRadius ? props.borderRadius : '0'};\r\n  cursor: ${(props: BlockProps) => (props.cursor ? props.cursor : 'auto')};\r\n  border-bottom: ${(props: BlockProps) =>\r\n    props.borderBottom ? props.borderBottom : 'auto'};\r\n  border-top: ${(props: BlockProps) =>\r\n    props.borderTop ? props.borderTop : 'auto'};\r\n  border-left: ${(props: BlockProps) =>\r\n    props.borderLeft ? props.borderLeft : 'auto'};\r\n  border-right: ${(props: BlockProps) =>\r\n    props.borderRight ? props.borderRight : 'auto'};\r\n  overflow-y: ${(props: BlockProps) =>\r\n    props.overflowY ? props.overflowY : ''};\r\n  overflow-x: ${(props: BlockProps) =>\r\n    props.overflowX ? props.overflowX : ''};\r\n  overflow: ${(props: BlockProps) => (props.overflow ? props.overflow : '')};\r\n  transition: border-bottom 0.1s ease-in-out;\r\n`;\r\n// -------------------------------------------------StyledSvg-----------------------------------------------------\r\nexport type StyledSvgProps = {\r\n  margin?: string | number;\r\n};\r\n\r\n/**\r\n * Styled Component ( StyledSvg )\r\n * Тег Svg\r\n * Компонента обертка для свг иконок, с возможностью отступов\r\n * Принимает в себя пропсы :\r\n * @param {string | number} margin - отступы снаружи ( необязательный )\r\n */\r\nexport const StyledSvg = styled.svg`\r\n  cursor: pointer;\r\n  margin: ${(props: StyledSvgProps) =>\r\n    props.margin ? props.margin : '0 12px 0 0'};\r\n`;\r\n// -------------------------------------------------StyledSelect-----------------------------------------------------\r\n\r\nexport type StyledSelectProps = {\r\n  width?: string | number;\r\n  height?: string | number;\r\n  padding?: string | number;\r\n  border?: string | number;\r\n};\r\n\r\n/**\r\n * Styled Component ( StyledSelect )\r\n * Тег Select\r\n * Стилизованная комопнента селекта с возможность кастомизации\r\n * Принимает в себя пропсы :\r\n * @param {string | number} width - ширина ( необязательный )\r\n * @param {string | number} height - высота  ( необязательный )\r\n * @param {string | number} padding - отстпу внутри ( необязательный )\r\n * @param {string} border - границы блока ( необязательный )\r\n */\r\nexport const StyledSelect = styled(Select)`\r\n  width: ${(props: StyledSelectProps) => (props.width ? props.width : '100%')};\r\n  height: ${(props: StyledSelectProps) =>\r\n    props.height ? props.height : '100%'};\r\n  padding: ${(props: StyledSelectProps) => (props.padding ? props.padding : 0)};\r\n  border: ${(props: StyledSelectProps) =>\r\n    props.border ? props.border : 'none'};\r\n`;\r\n\r\n// -------------------------------------------------Text-----------------------------------------------------\r\n\r\ntype TextProps = {\r\n  fontSize?: string | number;\r\n  fontWeight?: string | number;\r\n  font?: string;\r\n  opacityText?: number;\r\n  margin?: string | number;\r\n  color?: string;\r\n  cursor?: string;\r\n  borderBottom?: string;\r\n};\r\n/**\r\n * Styled Component ( Text )\r\n * Тег span\r\n * Отображает текст со стандартными значениями\r\n * шрифт - Roboto Regular, размер - 16 , толщина 400\r\n * Принимает в себя пропсы :\r\n * @param {string } font - Шрифт ( необязательный )\r\n * @param {string } color - цвет текста ( необязательный )\r\n * @param {string | number} fontSize - Размер шрифта ( необязательный )\r\n * @param {string | number} fontWeight - Толщина шрифта ( необязательный )\r\n * @param {string | number} margin - отступы снаружи ( необязательный )\r\n * @param {string } cursor - иконка при наведении на текст( необязательный )\r\n * @param {string } borderBottom - нижняя граница текста( необязательный )\r\n */\r\nexport const Text = styled.span`\r\n  font-size: ${(props: TextProps) =>\r\n    props.fontSize ? props.fontSize : '16px'};\r\n  font-weight: ${(props: TextProps) =>\r\n    props.fontWeight ? props.fontWeight : '400'};\r\n  font-family: ${(props: TextProps) =>\r\n      props.font ? props.font : 'Roboto Regular'},\r\n    sans-serif;\r\n  opacity: ${(props: TextProps) =>\r\n    props.opacityText ? props.opacityText : '1'};\r\n  margin: ${(props: TextProps) => (props.margin ? props.margin : '0')};\r\n  color: ${(props: TextProps) => (props.color ? props.color : 'black')};\r\n  cursor: ${(props: TextProps) => (props.cursor ? props.cursor : 'auto')};\r\n  border-bottom: ${(props: TextProps) =>\r\n    props.borderBottom ? props.borderBottom : '0'};\r\n`;\r\n\r\n// -------------------------------------------------StyledButton-----------------------------------------------------\r\n\r\ntype StyledButtonProps = {\r\n  width?: number | string;\r\n  height?: number | string;\r\n  borderRadius?: number | string;\r\n  border?: string;\r\n  background?: string;\r\n  margin?: string | number;\r\n  boxShadow?: string;\r\n  color?: string;\r\n};\r\n/**\r\n * Styled Component ( StyledButton )\r\n * Тег button\r\n * Компонента кнопка, стилизованная под общий дизайн\r\n * Принимает в себя пропсы :\r\n * @param {string | number} width - ширина ( необязательный )\r\n * @param {string | number} height - высота  ( необязательный )\r\n * @param {string} border - границы блока ( необязательный )\r\n * @param {number | string} borderRadius - Закругление границ блока ( необязательный )\r\n * @param {string | number} margin - отступы снаружи ( необязательный )\r\n * @param {string } background - задний фон ( необязательный )\r\n * @param {string } boxShadow - тень ( необязательный )\r\n * @param {string } color - цвет текста ( необязательный )\r\n */\r\nexport const StyledButton = styled.button`\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: ${(props: StyledButtonProps) => (props.width ? props.width : 'auto')};\r\n  height: ${(props: StyledButtonProps) =>\r\n    props.height ? props.height : 'auto'};\r\n  background: ${(props: StyledButtonProps) =>\r\n    props.background ? props.background : '#FCFCFC'};\r\n  box-shadow: ${(props: StyledButtonProps) =>\r\n    props.boxShadow ? props.boxShadow : 'none'};\r\n  border-radius: ${(props: StyledButtonProps) =>\r\n    props.borderRadius ? props.borderRadius : '5px'};\r\n  border: ${(props: StyledButtonProps) =>\r\n    props.border ? props.border : 'none'};\r\n  margin: ${(props: StyledButtonProps) => (props.margin ? props.margin : '0')};\r\n  color: ${(props: StyledButtonProps) => (props.color ? props.color : 'black')};\r\n`;\r\n\r\n// -------------------------------------------------StyledKeyboardArrowDownIcon-----------------------------------------------------\r\n/**\r\n * Styled Component ( StyledKeyboardArrowDownIcon )\r\n * Тег KeyboardArrowDownIcon ( Material UI Icon)\r\n * Стилизованная иконка в которой добавлены\r\n * стили для коректногоо отображения кастомной иконки в селекторе\r\n * Пропсы не принимает\r\n */\r\nexport const StyledKeyboardArrowDownIcon = styled(KeyboardArrowDownIcon)`\r\n  position: absolute !important;\r\n  right: 0 !important;\r\n  pointer-events: none !important;\r\n  margin-right: 10px;\r\n`;\r\n","import React, { CSSProperties, ReactNode } from 'react';\n\nimport { StyledButton, Text } from '../../ui-styled-components/common';\n\nexport type BasicButtonPropsType = {\n  mode: 'normal' | 'transparent' | 'red' | 'transparent-color';\n  text: string | number | ReactNode;\n  icon?: ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  margin?: string | number;\n  color?: string;\n  style?: CSSProperties;\n};\n/**\n * JSX Component( BasicButton )\n * Принимает пропсы :\n * @param {\"normal\" | \"transparent\" | \"red\"} props.mode - мод кнопки, станжартный и прозрачный (Обязательный)\n * @param {string | number | ReactNode} props.text - текст отображаемый в кнопке (Обязательный)\n * @param {ReactNode} props.icon - Иконка перед текстом (Необязательный)\n * @param { (e?:Event) => void} props.onClick - Действие выполняемое после нажатия на кнопку,получает в себя ивент\n * @param {string | number} props.margin - Внешгие отступы, имеют дефолтные значения  margin:\"10px 5px 10px 5px\",\n * */\nexport const BasicButton = (props: BasicButtonPropsType) => {\n  const normalStyleProps = {\n    boxShadow:\n      '0px 2px 10px rgba(109, 109, 109, 0.25), inset 0px 1px 0px rgba(255, 255, 255, 0.3)',\n    width: '148px',\n    height: '36px',\n    margin: props.margin ? props.margin : '10px 5px 10px 5px',\n    borderRadius: '2px',\n  };\n\n  switch (props.mode) {\n    case 'normal':\n      return (\n        <StyledButton\n          style={\n            props.style\n              ? { ...normalStyleProps, ...props.style }\n              : normalStyleProps\n          }\n          onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\n            props.onClick && props.onClick(e)\n          }\n        >\n          {props.icon && props.icon}\n          <Text font={'Roboto Medium'} cursor={'pointer'}>\n            {props.text}\n          </Text>\n        </StyledButton>\n      );\n    case 'transparent':\n      return (\n        <StyledButton\n          background={'none'}\n          onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\n            props.onClick && props.onClick(e)\n          }\n        >\n          {props.icon && props.icon}\n          <Text font={'Roboto Medium'} fontWeight={700} cursor={'pointer'}>\n            {props.text}\n          </Text>\n        </StyledButton>\n      );\n    case 'red':\n      return (\n        <StyledButton\n          style={\n            props.style\n              ? { ...normalStyleProps, ...props.style }\n              : normalStyleProps\n          }\n          background={'#FF3636'}\n          width={'178px'}\n          onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\n            props.onClick && props.onClick(e)\n          }\n        >\n          {props.icon && props.icon}\n          <Text color={'white'} cursor={'pointer'}>\n            {props.text}\n          </Text>\n        </StyledButton>\n      );\n    case 'transparent-color':\n      return (\n        <StyledButton\n          style={\n            props.style\n              ? { ...normalStyleProps, ...props.style }\n              : normalStyleProps\n          }\n          background={'none'}\n          border={`1px ${props.color} solid`}\n          width={'178px'}\n          onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\n            props.onClick && props.onClick(e)\n          }\n        >\n          {props.icon && props.icon}\n          <Text color={props.color} cursor={'pointer'}>\n            {props.text}\n          </Text>\n        </StyledButton>\n      );\n    default:\n      return (\n        <StyledButton\n          style={\n            props.style\n              ? { ...normalStyleProps, ...props.style }\n              : normalStyleProps\n          }\n          onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\n            props.onClick && props.onClick(e)\n          }\n        >\n          {props.icon && props.icon}\n          <Text font={'Roboto Medium'} cursor={'pointer'}>\n            {props.text}\n          </Text>\n        </StyledButton>\n      );\n  }\n};\n","import * as React from 'react'\r\nimport TextField from '@mui/material/TextField'\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker'\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\r\nimport { Dayjs } from 'dayjs'\r\n\r\nexport type BasicDatePickerPropsType = {\r\n  value: Dayjs | null\r\n  changeDate: (value: Dayjs | null) => void\r\n}\r\n\r\nexport function BasicDatePicker(props: BasicDatePickerPropsType) {\r\n  const [value, setValue] = React.useState<Dayjs | null>(props.value)\r\n\r\n  const DateChangeHandler = (value: Dayjs | null) => {\r\n    setValue(value)\r\n    props.changeDate(value)\r\n  }\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n      <DatePicker\r\n        value={value}\r\n        onChange={DateChangeHandler}\r\n        renderInput={params => (\r\n          <TextField\r\n            {...params}\r\n            size={'small'}\r\n            sx={{\r\n              input: {\r\n                padding: '6.5px 14px',\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    </LocalizationProvider>\r\n  )\r\n}\r\n","import React from 'react';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport { InputAdornment, OutlinedInput, Theme } from '@mui/material';\nimport { SxProps } from '@mui/system';\n\nexport type BasicInputPropsType = {\n  placeholder: string;\n  mode: 'search' | 'text';\n  sx?: SxProps<Theme>;\n  positionIcon?: 'start' | 'end';\n  onChange: (value: string) => void;\n  value: string;\n};\n/**\n * JSX Component( BasicInput )\n * Компонента представляющая базовый инпут использующийся в проекте, все кастомные инпуты рекомендуется делать на его\n * основе,имеет 2 режима, режим обычного инпута ,и поискового инпута\n * Принимает пропсы :\n * @param {string} props.placeholder значение отображаемое в пустом инпуте ( Обязательный )\n * @param {\"search\" | \"text\"} props.mode версия инпута, подставляющая уже определенные стили ( Обязательный )\n * @param {SxProps<Theme>} props.sx значения стилей которые перепишут уже существующие стили ( Необязательный )\n * @param {'start' | 'end'} props.positionIcon Позиция иконки в инпуте, начало/конец ( Необязательный )\n */\nexport const BasicInput = (props: BasicInputPropsType) => {\n  /**\n   * Дефолтные значения для компоненты\n   */\n  const defaultStyle = { width: '100%', height: '36px' };\n  const defaultPositionIcon = 'start';\n  /**\n   * Выгрузка значений из пропсов, в случаи их отсутсвия , присвоение значений по дефолту\n   */\n  const {\n    positionIcon = defaultPositionIcon,\n    sx = defaultStyle,\n    placeholder,\n  } = props;\n\n  switch (props.mode) {\n    case 'search': {\n      return (\n        <OutlinedInput\n          placeholder={placeholder}\n          sx={{ ...defaultStyle, ...sx }}\n          value={props.value}\n          onChange={(event) => props.onChange(event.currentTarget.value)}\n          startAdornment={\n            <InputAdornment position={positionIcon}>\n              <SearchIcon />\n            </InputAdornment>\n          }\n        />\n      );\n    }\n    case 'text': {\n      return (\n        <OutlinedInput\n          placeholder={placeholder}\n          sx={{ ...defaultStyle, ...sx }}\n          value={props.value}\n          onChange={(event) => props.onChange(event.currentTarget.value)}\n        />\n      );\n    }\n    default: {\n      return <OutlinedInput />;\n    }\n  }\n};\n","import React, { ReactNode } from 'react';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  DialogProps,\r\n  Grid,\r\n  IconButton,\r\n  SxProps,\r\n  useTheme,\r\n} from '@mui/material';\r\n\r\nimport { Block } from '../../ui-styled-components/common';\r\nimport { BasicButton } from '../BasicButton/BasicButton';\r\n\r\nexport type BasicModalPropsType = {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  title: string;\r\n  children: ReactNode;\r\n  width?: number;\r\n  mainContentStyle?: SxProps;\r\n  titleStyle?: SxProps;\r\n  dialogProps?: DialogProps;\r\n  onCancel?: () => void;\r\n  onCancelText?: string;\r\n  onSubmit?: () => void;\r\n  onSubmitText?: string;\r\n  customFooter?: ReactNode;\r\n};\r\n/**\r\n * JSX Component( BasicModal )\r\n * Принимает пропсы :\r\n * @param {string} example\r\n * @param {boolean} props.open параметр отвечающий за открытие модалки ( Обязательный )\r\n * @param {() => void} props.onClose функция выполняющая логику по закрытию модалки ( Обязательный )\r\n * @param {() => void} props.onCancel функция выполняющая логику по нажатию кнопки Cancel( Left bottom ) ( Необязательный )\r\n * @param {() => void} props.onSubmit функция выполняющая логику по нажатию кнопки Submit( Right bottom ) ( Необязательный )\r\n * @param {string} props.title Имя модалки ( Обязательный )\r\n * @param {React.ReactNode} props.children Контет отображающий внутри шаблона модального окна ( Обязательный )\r\n * @param {number} props.width ширина модального окна ( Необязательный )\r\n * @param {SxProps} props.mainContentStyle стиль основного контента ( Необязательный )\r\n * @param {SxProps} props.titleStyle стиль заголовка модальногоо окна ( Необязательный )\r\n * @param {DialogProps} props.dialogProps более гибкая натсройка модального окна ( Необязательный )\r\n * @param {string} props.onCancelText Текст для кнопки отмены по дефолту = Cancel\r\n * @param {string} props.onSubmitText Текст для кнопки потверждения по дефолту = Submit\r\n * @param {string} props.customFooter Можно передать свой кастомный футер для модалки,\r\n * тогда пропсы ( onSubmitText,onSubmit,onCancelText,onCancel) становяться не актуальны\r\n */\r\nexport const BasicModal = ({\r\n  open,\r\n  onClose,\r\n  title,\r\n  children,\r\n  width,\r\n  mainContentStyle,\r\n  titleStyle,\r\n  dialogProps,\r\n  onCancel,\r\n  onSubmit,\r\n  onCancelText = 'Cancel',\r\n  onSubmitText = 'Submit',\r\n  customFooter,\r\n}: BasicModalPropsType) => {\r\n  //--------------------------------------------------Инициализуем значения---------------------------------------------\r\n\r\n  // инициализируем значения относящиейся к стилям и общей теме\r\n  const theme = useTheme();\r\n  const isDarkTheme = theme.palette.mode === 'dark';\r\n\r\n  const style = mainContentStyle\r\n    ? mainContentStyle\r\n    : {\r\n        width: width || 500,\r\n        boxShadow: 24,\r\n        position: 'relative',\r\n      };\r\n  const defaultTitleStyle = titleStyle\r\n    ? titleStyle\r\n    : {\r\n        fontWeight: 500,\r\n        fontSize: '18px',\r\n        lineHeight: '21px',\r\n      };\r\n\r\n  //--------------------------------------------------Дополнительные функции--------------------------------------------\r\n\r\n  /**\r\n     функция обрабатывает нажатие на кнопку отмены\r\n     выполняет внутренею логику по закрытию модалки  в дополнение может выполонрить логику переданную в пропсах\r\n     комопненте под именем onCansel\r\n     */\r\n  const cancelHandler = () => {\r\n    onCancel && onCancel();\r\n    onClose();\r\n  };\r\n\r\n  /**\r\n     функция обрабатывает нажатие на кнопку сабмитв\r\n     выполняет внутренею логику по закрытию модалки  в дополнение может выполонрить логику переданную в пропсах\r\n     комопненте под именем onSubmit\r\n     */\r\n  const submitHandler = () => {\r\n    onSubmit && onSubmit();\r\n    onClose();\r\n  };\r\n\r\n  //--------------------------------------------------------JSX---------------------------------------------------------\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperProps={{\r\n        sx: {\r\n          backgroundColor: isDarkTheme ? '#182636' : '#FFFFFF',\r\n          backgroundImage: 'none',\r\n          maxWidth: '100%',\r\n        },\r\n      }}\r\n      {...dialogProps}\r\n    >\r\n      <Box sx={style}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent={'space-between'}\r\n          alignItems={'center'}\r\n          style={{\r\n            padding: '0 24px',\r\n            height: '60px',\r\n            borderBottom: isDarkTheme\r\n              ? '1px solid rgba(0, 0, 0, 0.1)'\r\n              : '1px solid #E5E5E5',\r\n          }}\r\n        >\r\n          <Box sx={defaultTitleStyle}>\r\n            <strong>{title}</strong>\r\n          </Box>\r\n          <Box justifyContent=\"center\" alignItems=\"center\" display=\"flex\">\r\n            <IconButton onClick={onClose} size=\"small\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid style={{ padding: '15px 24px 15px 24px', overflow: 'auto' }}>\r\n          {children}\r\n        </Grid>\r\n        {customFooter ? (\r\n          customFooter\r\n        ) : (\r\n          <Block\r\n            name={'Buttons'}\r\n            padding={'24px'}\r\n            justifyContent={'space-between'}\r\n          >\r\n            <BasicButton\r\n              mode={'normal'}\r\n              text={onCancelText}\r\n              onClick={cancelHandler}\r\n            />\r\n            <BasicButton\r\n              mode={'red'}\r\n              text={onSubmitText}\r\n              onClick={submitHandler}\r\n            />\r\n          </Block>\r\n        )}\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, {ReactNode, useState} from 'react';\r\n\r\nimport {Box, FormControl, MenuItem, OutlinedInput, SelectChangeEvent, Theme} from '@mui/material';\r\nimport { SxProps } from '@mui/system';\r\nimport {nanoid} from \"nanoid\";\r\nimport {StyledKeyboardArrowDownIcon, StyledSelect} from '../../ui-styled-components/common';\r\n\r\nexport type BasicSelectProps = {\r\n  label: string;\r\n  options: Array<string | number>;\r\n  onSelect: (value: number | string) => void;\r\n  minWidth?: number | string;\r\n  size?: 'small' | 'medium' | undefined;\r\n  opacityText?: number;\r\n  margin?: number | string;\r\n  height?: number | string;\r\n  colorIcon?: string;\r\n  colorText?: string;\r\n  sx?: SxProps<Theme>;\r\n};\r\n\r\n/**\r\n * JSX Component ( BasicSelect )\r\n * Универсальтный селектор подогнанный под текущий дизайн\r\n * Принимает следующие пропсы\r\n * @param  {string} props.label - Название селектора ( обязательный )\r\n * @param  {Array<string | number>} props.options - Параметры для выбора ( обязательный )\r\n * @param  { (value: number | string) => void} props.onSelect - функция выполняемая при выборе значения ( обязательный )\r\n * @param  {string} props.opacityText - Прозрачнасть текста ( необязательный )\r\n * @param  {number | string} props.minWidth - Минимальная ширина селектора ( необязательный )\r\n * @param  {\"small\" | \"medium\" | undefined} props.size - Общий размер селектора ( необязательный )\r\n * @param  {number | string} props.margin - Отстпы снаружи ( необязательный )\r\n * @param  {number | string} props.height - Высота селектора ( необязательный )\r\n * @param  {string} props.colorIcon - Цвет иконки ( необязательный )\r\n * @param  {string} props.colorText - Цвет текста в селекторе ( необязательный )\r\n * @param  {SxProps<Theme>} props.sx - дополнительные стили которые можно наложить поверх действующих ( необязательный )\r\n */\r\nexport function BasicSelect(props: BasicSelectProps) {\r\n  //--------------------------------------------Инициализируем переменные--------------------------------------------\r\n\r\n  const [value, setValue] = useState<string>('');\r\n  const {\r\n    minWidth = 224,\r\n    size = 'small',\r\n    height = '36px',\r\n  } = props;\r\n\r\n  //---------------------------------------------Дополнительные функции---------------------------------------------\r\n\r\n  /**\r\n   * Функция обработчик выбора значения\r\n   */\r\n  const handleChange = (event: SelectChangeEvent | any) => {\r\n    setValue(event.target.value as string);\r\n    props.onSelect && props.onSelect(event.target.value as number);\r\n  };\r\n\r\n  //-----------------------------------------------JSX-----------------------------------------------\r\n\r\n  return (\r\n      <Box sx={{minWidth: minWidth, margin: props.margin}}>\r\n        <FormControl fullWidth sx={{height: height, ...props.sx}}>\r\n          <StyledSelect\r\n              displayEmpty\r\n              value={value}\r\n              onChange={handleChange}\r\n              input={<OutlinedInput/>}\r\n              size={size}\r\n              renderValue={(value) => value ? value as ReactNode :\r\n                  <em style={{opacity: props.opacityText,color:props.colorText}}>{props.label}</em>\r\n              }\r\n              IconComponent={(classes) => {\r\n                return <StyledKeyboardArrowDownIcon className={classes.className} sx={{color:props.colorIcon}}/>\r\n              }}\r\n          >\r\n            {props.options.map((option) => <MenuItem key={nanoid()} value={option}>{option}</MenuItem>)}\r\n          </StyledSelect>\r\n        </FormControl>\r\n      </Box>\r\n  );\r\n}\r\n","import React, { ChangeEvent, useState, memo } from 'react';\n\nimport { Pagination } from '@mui/material';\n\nimport { Block, Text } from '../../ui-styled-components/common';\nimport { BasicSelect } from '../BasicSelect/BasicSelect';\n\nexport type BasicPaginationPropsType = {\n  currentPage?: number;\n  setCurrentPage?: (currentPage: number) => void;\n\n  countOnPages?: number;\n  optionsCountOnPage?: Array<string | number>;\n  onSelectCountOnPage?: (count: number | string) => void;\n\n  countPages?: number;\n  subTitlePagination?: string;\n};\n\n/**\n * JSX Component( BasicPagination )\n * Компонента отображает пагинацию, натсраивается параметрами приходящими из вне\n * Принимает пропсы :\n * @param {type} prop\n * @param currentPage - Текущая страница ( по дефолту  = 1 ) ( Не обязательный )\n * @param setCurrentPage - функция выполняемая логику выбора другой страницы ( Не обязательный )\n *\n * @param countOnPages - Количество строк отображаемых на одной стронице ( по дефолту  = 10 ) ( Не обязательный )\n * @param subTitlePagination - Дополнительный текст правее пагинатора ( Не обязательный )\n * @param optionsCountOnPage - Массив вариантов,количества отображения строк на одной странице ( по дефолту [5,10,15,20] ( Не обязательный )\n *\n * @param countPages - Общие количество страниц ( по дефолту  = 0 )( Не обязательный )\n * @param onSelectCountOnPage - функция выполняемая при выборе ( Не обязательный )\n */\nexport const BasicPagination = memo(\n  ({\n    currentPage = 1,\n    countOnPages = 10,\n    setCurrentPage,\n    onSelectCountOnPage,\n    countPages = 0,\n    subTitlePagination,\n    optionsCountOnPage = [5, 10, 15, 20],\n  }: BasicPaginationPropsType) => {\n    //--------------------------------------------Инициализуем значения-------------------------------------------------\n\n    const [defaultCurrentPage, setDefaultCurrentPage] = useState(currentPage);\n    const [defaultCountOnPages, setDefaultCountOnPages] = useState<\n      string | number\n    >(countOnPages);\n\n    //-------------------------------------------Дополнительные функции-------------------------------------------------\n\n    /**\n     * Функция проверяет, пришли ли обработчики выбора страницы из вне, если нет, использует стандартную логику\n     * @param _event\n     * @param page\n     */\n    const changePageHandler = (_event: ChangeEvent<unknown>, page: number) => {\n      setCurrentPage && setCurrentPage(page);\n      setDefaultCurrentPage(page);\n    };\n\n    /**\n     * Функция проверяет, пришли ли обработчики выбора страницы из вне, если нет, использует стандартную логику\n     * @param value\n     */\n    const changeCountOnPageHandler = (value: string | number) => {\n      onSelectCountOnPage && onSelectCountOnPage(value);\n      setDefaultCountOnPages(value);\n    };\n\n    //-------------------------------------------------JSX-----------------------------------------------------\n    return (\n      <Block name={'PaginationContainer'}>\n        <Pagination\n          count={Math.round(countPages)}\n          variant=\"outlined\"\n          shape=\"rounded\"\n          color=\"primary\"\n          page={defaultCurrentPage}\n          onChange={changePageHandler}\n        />\n        <Block name={'ShowCount'} margin={'0 15px 0 15px'}>\n          <Text margin={'0 10px 0 0'}>Show</Text>\n          <BasicSelect\n            label={defaultCountOnPages.toString()}\n            options={optionsCountOnPage}\n            onSelect={changeCountOnPageHandler}\n            minWidth={39}\n            height={24}\n          />\n        </Block>\n        <Block name={'subTitlePagination'}>\n          {subTitlePagination && <span>{subTitlePagination}</span>}\n        </Block>\n      </Block>\n    );\n  }\n);\n","import React from 'react';\n\nimport {nanoid} from 'nanoid';\n\nimport {Block} from '../../../ui-styled-components/common';\nimport {TableRowType} from '../BasicTable';\n\ntype columnStyle = {\n    width?: string;\n    padding?: string;\n};\n\ntype CustomTableBodyPropsType = {\n    rows: TableRowType[];\n    columnStyle: columnStyle[];\n    minWidth: number | string;\n};\n/**\n * JSX Component( CustomTableBody )\n * Принимает пропсы :\n * @param {TableRowType[]} props.rows - Строки таблицы ( данные ) ( обязательный )\n * @param { string[]} props.columnStyle - Стиль для столбца, стили наклываются по порядку начиная с 0\n * @param { number | string} props.minWidthTable - Минимальная ширина таблицы ( обязательный )\n */\nexport const CustomTableBody = (props: CustomTableBodyPropsType) => {\n    return (\n        <Block\n            name={'Table body'}\n            width={'100%'}\n            display={'block'}\n            minWidth={props.minWidth}\n        >\n            {props.rows.map((row) => (\n                <Block\n                    name={'Table row'}\n                    key={nanoid()}\n                    justifyContent={'flex-start'}\n                    width={'100%'}\n                    height={'46px'}\n                    borderBottom={'1px solid #CFCFCF'}\n                    flexWrap={'nowrap'}\n\n                    // sx={{ '&:last-child td, &:last-child th': { border: 0 }}}\n                >\n                    {Object.keys(row).map((key, index) => {\n\n                        const currentRow = row[key] as any ;\n                        return (\n                            <Block\n                                name={'Row value'}\n                                key={nanoid()}\n                                margin={'0 0 0 24px'}\n                                padding={props.columnStyle[index].padding}\n                                justifyContent={currentRow &&\n                                currentRow.justifyContent\n                                    ? currentRow.justifyContent\n                                    : 'flex-start'\n                                }\n                                width={props.columnStyle[index].width}\n                            >\n                                {currentRow && currentRow.value ? currentRow.value : currentRow}\n                            </Block>\n                        );\n                    })}\n                </Block>\n            ))}\n        </Block>\n    );\n};\n","import React from 'react';\n\nimport { nanoid } from 'nanoid';\n\nimport { Block } from '../../../ui-styled-components/common';\nimport { TableTitleType } from '../BasicTable';\n\ntype TableHeadPropsType = {\n  titles: TableTitleType[];\n  minWidth: number | string;\n};\n/**\n * JSX Component( CustomTableHead )\n * Принимает пропсы :\n * @param {TableTitleType[]} props.titles - Заголовки таблицы ( обязательный )\n * @param { number | string} props.minWidthTable - Минимальная ширина таблицы ( обязательный )\n */\nexport const CustomTableHead = (props: TableHeadPropsType) => {\n  return (\n    <Block\n      name={'Table Head'}\n      background={'#E8E8E8'}\n      width={'100%'}\n      justifyContent={'flex-start'}\n      height={'36px'}\n      minWidth={props.minWidth}\n    >\n      {props.titles.map((title) => (\n        <Block\n          name={'Title'}\n          key={nanoid()}\n          flexWrap={'nowrap'}\n          width={title.width}\n          margin={'0 0 0 24px'}\n          padding={title.padding}\n          justifyContent={'flex-start'}\n        >\n          <strong>{title.value}</strong>\n        </Block>\n      ))}\n    </Block>\n  );\n};\n","import React, { ReactNode } from 'react';\n\nimport { Block } from '../../ui-styled-components/common';\nimport {\n  BasicPagination,\n  BasicPaginationPropsType,\n} from '../BasicPagination/BasicPagination';\n\nimport { CustomTableBody } from './TableBody/CustomTableBody';\nimport { CustomTableHead } from './TableHead/CustomTableHead';\n\n//-------------------------------------------------Types-----------------------------------------------------\n\nexport type CustomRowType = {\n  value: ReactNode;\n  justifyContent: string;\n  padding?: string;\n};\n\nexport type TableTitleType = {\n  width: string;\n  value: string;\n  padding?: string;\n};\nexport type TableRowType = Record<string, ReactNode | CustomRowType>;\n\nexport type BasicTablePropsType = {\n  titles: TableTitleType[];\n  rows: TableRowType[];\n  minWidthTable: number | string;\n  paginationOptions?: BasicPaginationPropsType;\n};\n\n//---------------------------------------------------------------------------------------------------------\n\n/**\n * JSX Component( BasicTable )\n * Принимает пропсы :\n * @param {TableTitleType[]} props.titles - Заголовки таблицы ( обязательный )\n * @param {TableRowType[]} props.rows - Строки таблицы ( данные ) ( обязательный )\n * @param { number | string} props.minWidthTable - Минимальная ширина таблицы\n * @param {BasicPaginationPropsType} props.paginationOptions - Настройки пагинатора ( необязательный )\n */\nexport const BasicTable = (props: BasicTablePropsType) => {\n  //-------------------------------------------------JSX-----------------------------------------------------\n\n  return (\n    <Block\n      name={'Table with Paginator Container'}\n      width={'100%'}\n      margin={'24px 0 0 0'}\n      display={'block'}\n    >\n      <Block name={'Table Container'} display={'block'} overflow={'auto'}>\n        <CustomTableHead titles={props.titles} minWidth={props.minWidthTable} />\n        <CustomTableBody\n          rows={props.rows}\n          minWidth={props.minWidthTable}\n          columnStyle={props.titles.map((title) => ({\n            width: title.width,\n            padding: title.padding,\n          }))}\n        />\n      </Block>\n\n      <Block\n        name={'Pagination'}\n        width={'100%'}\n        justifyContent={'flex-start'}\n        margin={'38px 0 50px 0 '}\n      >\n        <BasicPagination {...props.paginationOptions} />\n      </Block>\n    </Block>\n  );\n};\n","import {Text, Block} from \"../../ui-styled-components/common\";\r\nimport React, {PropsWithChildren} from \"react\";\r\n\r\ninterface BoxWithLabelPropsType extends PropsWithChildren {\r\n    label: string\r\n    margin?: string\r\n}\r\n\r\n/**\r\n * JSX Component( BoxWithLabel )\r\n * Принимает пропсы :\r\n * @param {string} props.label\r\n */\r\nexport const BoxWithLabel = (props: BoxWithLabelPropsType) => {\r\n\r\n    //--------------------------------------------Инициализируем переменные---------------------------------------------\r\n\r\n    const {margin = \"0 14px 20px 0\"} = props\r\n\r\n    //--------------------------------------------------------JSX-------------------------------------------------------\r\n\r\n    return (\r\n        <Block\r\n            name={'Select with label'}\r\n            flexDirection={'column'}\r\n            alignItems={'flex-start'}\r\n            margin={margin}\r\n        >\r\n            <Text opacityText={0.5} fontSize={'14px'} margin={'0 0 8px 0'}>\r\n                {props.label}\r\n            </Text>\r\n            {props.children}\r\n        </Block>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { Block } from '../../ui-styled-components/common';\r\nimport { BasicInput } from '../BasicInput/BasicInput';\r\nimport { BasicSelect } from '../BasicSelect/BasicSelect';\r\n\r\nexport type FilterPanelPropsType = {\r\n  firstSelectLabel: string;\r\n  firstSelectOnSelect: (value: string | number) => void;\r\n  firstSelectOptions: Array<string | number>;\r\n  secondSelectLabel: string;\r\n  secondSelectOnSelect: (value: string | number) => void;\r\n  secondSelectOptions: Array<string | number>;\r\n  inputPlaceholder: string;\r\n  inputOnChange: (value: string) => void;\r\n  inputValue: string;\r\n};\r\n/**\r\n * JSX Component( FilterPanel )\r\n * Принимает пропсы :\r\n * @param {string} props.firstSelectLabel имя первого селектора ( Обязательный )\r\n * @param {(value:string | number) => void} props.firstSelectOnSelect функция обработчик выбора значения первого селектора ( Обязательный )\r\n * @param { Array<string | number>} props.firstSelectOptions массив данных для первого селектора ( Обязательный )\r\n * @param {string} props.secondSelectLabel имя второго селектора ( Обязательный )\r\n * @param { (value:string | number) => void} props.secondSelectOnSelect функция обработчик выбора значения второго селектора ( Обязательный )\r\n * @param {Array<string | number>} props.secondSelectOptions массив данных для второго селектора ( Обязательный )\r\n * @param {string} props.inputPlaceholder полпрозрачное значение на инпуте без введеного текста ( Обязательный )\r\n * @param {(value:string) => void} props.inputOnChange функция обработчик измененния значения инпута ( Обязательный )\r\n * @param {string} props.inputValue функция обработчик измененния значения инпута ( Обязательный )\r\n */\r\nexport const FilterPanel = (props: FilterPanelPropsType) => {\r\n  //--------------------------------------------Инициализируем переменные--------------------------------------------\r\n\r\n  /**\r\n   * Обозначаем общие параметры пропсов для более легкой передачи в компоненты\r\n   */\r\n  const commonSelectStyle = {\r\n    margin: '0 24px 0 0',\r\n    minWidth: '17%',\r\n  };\r\n\r\n  //-----------------------------------------------JSX-----------------------------------------------\r\n\r\n  return (\r\n    <Block\r\n      name={'Filter Panel'}\r\n      width={'100%'}\r\n      margin={'24px 0 0 0'}\r\n      justifyContent={'space-between'}\r\n    >\r\n      <BasicSelect\r\n        label={props.firstSelectLabel}\r\n        options={props.firstSelectOptions}\r\n        onSelect={props.firstSelectOnSelect}\r\n        {...commonSelectStyle}\r\n      />\r\n      <BasicSelect\r\n        label={props.secondSelectLabel}\r\n        options={props.secondSelectOptions}\r\n        onSelect={props.secondSelectOnSelect}\r\n        {...commonSelectStyle}\r\n      />\r\n      <BasicInput\r\n        mode={'search'}\r\n        placeholder={props.inputPlaceholder}\r\n        sx={{ width: '60%' }}\r\n        onChange={props.inputOnChange}\r\n        value={props.inputValue}\r\n      />\r\n    </Block>\r\n  );\r\n};\r\n","import React from 'react';\n\nimport { StyledSvg } from '../../ui-styled-components/common';\n\n/**\n * SVG иконка стрелка указывающая влево\n */\nexport const ArrowLeftSvg = () => {\n  return (\n    <StyledSvg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M20 12.5H6M6 12.5L10.6667 8M6 12.5L10.6667 17\"\n        stroke=\"black\"\n        strokeWidth=\"2\"\n      />\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { Path } from 'history';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Block } from '../../../ui-styled-components/common';\nimport { ArrowLeftSvg } from '../../Svg/ArrowLeftSvg';\n\ntype BackStepPropsType = {\n  text: string;\n  navigatePath: string | Partial<Path> | undefined;\n};\n/**\n *\n * JSX Component( NavigateText )\n * Называет и направляет по указанному в пропсах пути\n * Принимает пропсы :\n * @param {string} props.text текст описывающий путь\n * @param {string | Partial<Path>} props.navigatePath путь указывающий куда вывполнить навигейт\n */\nexport const NavigateText = (props: BackStepPropsType) => {\n  const navigate = useNavigate();\n\n  return (\n    <Block\n      name={'NavigateText'}\n      width={'100%'}\n      justifyContent={'flex-start'}\n      alignItems={'center'}\n      onClick={() => {\n        props.navigatePath ? navigate(props.navigatePath) : navigate(-1);\n      }}\n      cursor={'pointer'}\n      margin={'0 0 42px 0'}\n    >\n      <ArrowLeftSvg />\n      {props.text}\n    </Block>\n  );\n};\n","import React from 'react';\n\nimport { Block, Text } from '../../../ui-styled-components/common';\nimport { BasicButton } from '../../BasicButton/BasicButton';\n\ntype TitleAndButtonPropsType = {\n  title: string;\n  buttonText: string | undefined;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n};\n/**\n * JSX Component( TitleAndButton )\n * Отображает текст и кнопку, если для кнопки был получен текст\n * Текст слева, кнопку справа\n * Принимает пропсы :\n * @param {string} props.title - заголовок ( обязательный )\n * @param {string} props.buttonText - текст на кнопке . Если текста нету , не будет и кнопки  ( необязательный )\n */\nexport const TitleAndButton = (props: TitleAndButtonPropsType) => {\n  return (\n    <Block\n      name={'Title and button'}\n      width={'100%'}\n      justifyContent={'space-between'}\n    >\n      <Text fontWeight={'700'} fontSize={'22px'}>\n        {props.title}\n      </Text>\n      {props.buttonText ? (\n        <BasicButton\n          mode={'red'}\n          text={props.buttonText}\n          onClick={(e) => props.onClick(e)}\n        />\n      ) : (\n        <Block name={'Empty Block'} />\n      )}\n    </Block>\n  );\n};\n","import React, { ReactNode } from 'react';\n\nimport { Path } from 'history';\n\nimport { Block } from '../../ui-styled-components/common';\n\nimport { NavigateText } from './NavigateText/NavigateText';\nimport { TitleAndButton } from './TitleAndButton/TitleAndButton';\n\nexport type InfoBarPropsType = {\n  title: string;\n  buttonText?: string;\n  navigateText?: string;\n  buttonOnClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  subInfoBlock?: ReactNode;\n  navigatePath?: string | Partial<Path>;\n};\n/**\n * JSX Component( InfoBar )\n * Показывает название текущего раздела с левого края , в противополжной стороне рисуется кнопка с действием\n * над именем разделом может распологаться переход на предыдущий раздел\n * под именем разделом можно отрисовать дополнитульную информацию\n * Принимает пропсы :\n * @param {string} props.title - Заголовок ( обязательный )\n * @param {string} props.buttonText - Текст на кнопке . Если текста нету , не будет и кнопки  ( необязательный )\n * @param {string} props.buttonOnClick - Функцця которая будет выполняться при нажатии на кнопку  ( необязательный )\n * @param {string} props.backStepText - Текст для навигации назад ( необязательный )\n * @param {ReactNode} props.infoBlock - Компонента для отображения дополнительной информации под тайтлом ( необязательный )\n * @param {string | Partial<Path>} props.navigatePath - Путь указывающий куда выполниться переход\n */\nexport const InfoBar = (props: InfoBarPropsType) => {\n  //-----------------------------------------------JSX-----------------------------------------------\n\n  return (\n    <Block name={'Header'} width={'100%'} margin={'39px 0 0 0'}>\n      {props.navigateText && (\n        <NavigateText\n          text={props.navigateText}\n          navigatePath={props.navigatePath}\n        />\n      )}\n      <TitleAndButton\n        title={props.title}\n        buttonText={props.buttonText}\n        onClick={(e) => props.buttonOnClick && props.buttonOnClick(e)}\n      />\n      <Block name={'Sub Info'} width={'100%'} justifyContent={'flex-start'}>\n        {props.subInfoBlock}\n      </Block>\n    </Block>\n  );\n};\n","import React from 'react';\n\nimport { StyledSvg, StyledSvgProps } from '../../ui-styled-components/common';\n\n/**\n * SVG иконка указывающая на выход\n */\nexport const LogoutSVG = (props: StyledSvgProps) => {\n  return (\n    <StyledSvg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <g opacity=\"0.8\">\n        <mask id=\"path-1-inside-1_6_12737\" fill=\"white\">\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M10.8335 2.50093C10.7945 2.50031 10.7554 2.5 10.7163 2.5C6.63889 2.5 3.3335 5.85786 3.3335 10C3.3335 14.1421 6.63889 17.5 10.7163 17.5C10.7554 17.5 10.7945 17.4997 10.8335 17.4991V16.4989C10.7945 16.4996 10.7555 16.5 10.7163 16.5C7.20597 16.5 4.3335 13.6048 4.3335 10C4.3335 6.39524 7.20597 3.5 10.7163 3.5C10.7555 3.5 10.7945 3.50036 10.8335 3.50108V2.50093Z\"\n          />\n        </mask>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M10.8335 2.50093C10.7945 2.50031 10.7554 2.5 10.7163 2.5C6.63889 2.5 3.3335 5.85786 3.3335 10C3.3335 14.1421 6.63889 17.5 10.7163 17.5C10.7554 17.5 10.7945 17.4997 10.8335 17.4991V16.4989C10.7945 16.4996 10.7555 16.5 10.7163 16.5C7.20597 16.5 4.3335 13.6048 4.3335 10C4.3335 6.39524 7.20597 3.5 10.7163 3.5C10.7555 3.5 10.7945 3.50036 10.8335 3.50108V2.50093Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M10.8335 2.50093H11.8335V1.51661L10.8493 1.50105L10.8335 2.50093ZM10.8335 17.4991L10.8493 18.4989L11.8335 18.4834V17.4991H10.8335ZM10.8335 16.4989H11.8335V15.4804L10.8151 15.4991L10.8335 16.4989ZM10.8335 3.50108L10.8151 4.50091L11.8335 4.51964V3.50108H10.8335ZM10.8493 1.50105C10.805 1.50035 10.7607 1.5 10.7163 1.5V3.5C10.7502 3.5 10.784 3.50027 10.8177 3.5008L10.8493 1.50105ZM10.7163 1.5C6.07182 1.5 2.3335 5.32049 2.3335 10H4.3335C4.3335 6.39524 7.20597 3.5 10.7163 3.5V1.5ZM2.3335 10C2.3335 14.6795 6.07182 18.5 10.7163 18.5V16.5C7.20597 16.5 4.3335 13.6048 4.3335 10H2.3335ZM10.7163 18.5C10.7607 18.5 10.8051 18.4996 10.8493 18.4989L10.8177 16.4992C10.784 16.4997 10.7502 16.5 10.7163 16.5V18.5ZM11.8335 17.4991V16.4989H9.8335V17.4991H11.8335ZM10.7163 17.5C10.7616 17.5 10.8068 17.4996 10.8519 17.4988L10.8151 15.4991C10.7823 15.4997 10.7493 15.5 10.7163 15.5V17.5ZM3.3335 10C3.3335 14.1428 6.63959 17.5 10.7163 17.5V15.5C7.77235 15.5 5.3335 13.0667 5.3335 10H3.3335ZM10.7163 2.5C6.63959 2.5 3.3335 5.85716 3.3335 10H5.3335C5.3335 6.93333 7.77235 4.5 10.7163 4.5V2.5ZM10.8519 2.50125C10.8068 2.50042 10.7616 2.5 10.7163 2.5V4.5C10.7493 4.5 10.7823 4.5003 10.8151 4.50091L10.8519 2.50125ZM11.8335 3.50108V2.50093H9.8335V3.50108H11.8335Z\"\n          fill=\"black\"\n          mask=\"url(#path-1-inside-1_6_12737)\"\n        />\n        <path\n          d=\"M16.1871 10.3536C16.3823 10.1583 16.3823 9.84171 16.1871 9.64645L13.0051 6.46447C12.8098 6.2692 12.4932 6.2692 12.298 6.46447C12.1027 6.65973 12.1027 6.97631 12.298 7.17157L15.1264 10L12.298 12.8284C12.1027 13.0237 12.1027 13.3403 12.298 13.5355C12.4932 13.7308 12.8098 13.7308 13.0051 13.5355L16.1871 10.3536ZM8.3335 10.5L15.8335 10.5V9.5L8.3335 9.5V10.5Z\"\n          fill=\"black\"\n        />\n      </g>\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { StyledSvg, StyledSvgProps } from '../../ui-styled-components/common';\n\n/**\n * JSX Component ( MenuBaraSvg )\n * Отрисовка конкретной свг\n * Принимает в себя пропсы :\n * margin - отступы снаружи\n */\nexport const MenuBaraSvg = (props: StyledSvgProps) => {\n  return (\n    <StyledSvg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M3 4.5H21\"\n        stroke=\"#292D32\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M3 9.5H21\"\n        stroke=\"#292D32\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M3 14.5H21\"\n        stroke=\"#292D32\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M3 19.5H21\"\n        stroke=\"#292D32\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { Block, Text } from '../../ui-styled-components/common';\nimport { BasicButton } from '../BasicButton/BasicButton';\nimport { BasicSelect } from '../BasicSelect/BasicSelect';\nimport { LogoutSVG } from '../Svg/LogoutSvg';\nimport { MenuBaraSvg } from '../Svg/MenuBaraSvg';\n\n/**\n * JSX Component ( NavBar )\n * Всегда отрисовывается сверху сайта\n * Не примает никакиз пропсов\n */\nexport const NavBar = () => {\n  const name = 'Елизавета Спивак';\n  const selectOptions = ['Front-end', 'Back-End'];\n\n  return (\n    <Block\n      name={'NavBarContainer'}\n      width={'100vw'}\n      minHeight={'60px'}\n      background={'#FCFCFC'}\n      boxShadow={\n        '0px 2px 10px rgba(109, 109, 109, 0.25), inset 0px 1px 0px rgba(255, 255, 255, 0.3)'\n      }\n    >\n      <Block\n        name={'ContentContainer'}\n        width={'90vw'}\n        justifyContent={'space-between'}\n      >\n        <Block\n          name={'LeftHalf'}\n          justifyContent={'flex-start'}\n          margin={'10px 10px 10px 0'}\n        >\n          <MenuBaraSvg />\n        </Block>\n        <Block\n          name={'RightHalf'}\n          justifyContent={'flex-start'}\n          width={'fit-content'}\n        >\n          <Block\n            name={'SelectItem'}\n            width={'250px'}\n            justifyContent={'flex-start'}\n            margin={'10px 40px 10px 0'}\n          >\n            <BasicSelect\n              label={'Name course'}\n              options={selectOptions}\n              onSelect={() => {}}\n            />\n          </Block>\n          <Block name={'NameItem'} margin={'10px 30px 10px 0'}>\n            <Text fontSize={'16px'}>{name}</Text>\n          </Block>\n          <BasicButton mode={'normal'} icon={<LogoutSVG />} text={'Sign out'} />\n        </Block>\n      </Block>\n    </Block>\n  );\n};\n","import React from 'react';\n\nimport { StyledSvg, StyledSvgProps } from '../../ui-styled-components/common';\n/**\n * SVG иконка человек и плюс\n */\nexport const AddUserSvg = (props: StyledSvgProps) => {\n  return (\n    <StyledSvg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M21 6H20V5C20 4.73478 19.8946 4.48043 19.7071 4.29289C19.5196 4.10536 19.2652 4 19 4C18.7348 4 18.4804 4.10536 18.2929 4.29289C18.1054 4.48043 18 4.73478 18 5V6H17C16.7348 6 16.4804 6.10536 16.2929 6.29289C16.1054 6.48043 16 6.73478 16 7C16 7.26522 16.1054 7.51957 16.2929 7.70711C16.4804 7.89464 16.7348 8 17 8H18V9C18 9.26522 18.1054 9.51957 18.2929 9.70711C18.4804 9.89464 18.7348 10 19 10C19.2652 10 19.5196 9.89464 19.7071 9.70711C19.8946 9.51957 20 9.26522 20 9V8H21C21.2652 8 21.5196 7.89464 21.7071 7.70711C21.8946 7.51957 22 7.26522 22 7C22 6.73478 21.8946 6.48043 21.7071 6.29289C21.5196 6.10536 21.2652 6 21 6Z\"\n        fill=\"black\"\n      />\n      <path\n        d=\"M10 11C10.7911 11 11.5645 10.7654 12.2223 10.3259C12.8801 9.88635 13.3928 9.26164 13.6955 8.53074C13.9983 7.79983 14.0775 6.99556 13.9231 6.21964C13.7688 5.44372 13.3878 4.73098 12.8284 4.17157C12.269 3.61216 11.5563 3.2312 10.7804 3.07686C10.0044 2.92252 9.20017 3.00173 8.46927 3.30448C7.73836 3.60723 7.11365 4.11992 6.67412 4.77772C6.2346 5.43552 6 6.20888 6 7C6 8.06087 6.42143 9.07828 7.17157 9.82843C7.92172 10.5786 8.93913 11 10 11Z\"\n        fill=\"black\"\n      />\n      <path\n        d=\"M16 21C16.2652 21 16.5196 20.8946 16.7071 20.7071C16.8946 20.5196 17 20.2652 17 20C17 18.1435 16.2625 16.363 14.9497 15.0503C13.637 13.7375 11.8565 13 10 13C8.14348 13 6.36301 13.7375 5.05025 15.0503C3.7375 16.363 3 18.1435 3 20C3 20.2652 3.10536 20.5196 3.29289 20.7071C3.48043 20.8946 3.73478 21 4 21\"\n        fill=\"black\"\n      />\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { StyledSvg } from '../../ui-styled-components/common';\n\n/**\n * SVG иконка черный закрашенный треугольник указывающий вниз\n */\nexport const BlackTriangleDownSvg = () => {\n  return (\n    <StyledSvg\n      width=\"8\"\n      height=\"5\"\n      viewBox=\"0 0 8 5\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{ marginRight: '5px' }}\n    >\n      <path d=\"M4 5L0.535898 0.5L7.4641 0.5L4 5Z\" fill=\"black\" />\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { StyledSvg } from '../../ui-styled-components/common';\n\n/**\n * SVG иконка черный закрашенный треугольник указывающий вверх\n */\nexport const BlackTriangleUpSvg = () => {\n  return (\n    <StyledSvg\n      width=\"8\"\n      height=\"5\"\n      viewBox=\"0 0 8 5\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M4 0L7.4641 4.5H0.535898L4 0Z\" fill=\"black\" />\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { StyledSvg } from '../../ui-styled-components/common';\n\ntype EditSvgPropsType = {\n  onClick?: (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => any;\n  width?: number;\n  height?: number;\n};\n/**\n * JSX Component( EditSvg )\n * Принимает пропсы :\n * @param {e:React.MouseEvent<SVGSVGElement, MouseEvent>} props.onClick\n */\nexport const EditPencilSvg = (props: EditSvgPropsType) => {\n  const { width = 50, height = 50 } = props;\n\n  return (\n    <StyledSvg\n      width={width}\n      height={height}\n      viewBox={`-5 -4 24 24`}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      onClick={props.onClick}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10.3449 0.958172C11.1227 0.858708 11.9097 1.17678 12.7093 1.92915L12.7102 1.93002C13.5125 2.68875 13.8777 3.45841 13.8229 4.24233C13.77 4.99983 13.3308 5.64097 12.8301 6.17001M12.8301 6.17001L7.35948 11.9605C7.20526 12.1284 6.99759 12.2706 6.80073 12.3759C6.60133 12.4825 6.37069 12.5738 6.15417 12.6122L6.15084 12.6128L4.00494 12.9794C3.48456 13.0691 2.98556 12.939 2.63009 12.6019C2.27512 12.2653 2.11826 11.7744 2.17637 11.2514L2.17654 11.2499L2.42428 9.08054C2.45305 8.86474 2.5332 8.63122 2.62767 8.42864C2.7218 8.22679 2.85024 8.01276 3.00222 7.85096L3.0032 7.84993L8.47653 2.05659C8.97756 1.52734 9.59325 1.05429 10.3449 0.958172M9.20309 2.7437C9.203 2.74379 9.20317 2.74362 9.20309 2.7437L3.73107 8.53564C3.73096 8.53576 3.73119 8.53552 3.73107 8.53564C3.67643 8.59395 3.60136 8.70678 3.53396 8.85129C3.46779 8.99319 3.42804 9.12446 3.41613 9.20884L3.17026 11.3618C3.17023 11.3621 3.17021 11.3623 3.17018 11.3625C3.14184 11.6192 3.2216 11.7847 3.31821 11.8763C3.4144 11.9676 3.58207 12.0375 3.83503 11.9939L3.8358 11.9938L5.98054 11.6274C6.06405 11.6123 6.19273 11.567 6.32924 11.494C6.46762 11.42 6.57173 11.3402 6.62384 11.2831L6.62981 11.2765L12.1032 5.48326C12.549 5.01236 12.7967 4.58326 12.8254 4.1726C12.8522 3.78829 12.6942 3.29146 12.0236 2.6571C11.3568 2.02977 10.8538 1.90123 10.4717 1.95009C10.0635 2.0023 9.64863 2.27312 9.20309 2.7437Z\"\n        fill=\"black\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.84974 2.87261C8.12259 2.8301 8.37824 3.01683 8.42075 3.28968C8.67216 4.90342 9.98185 6.1385 11.6101 6.3025C11.8849 6.33017 12.0852 6.57534 12.0575 6.85009C12.0299 7.12484 11.7847 7.32514 11.5099 7.29746C9.43157 7.08813 7.75458 5.50987 7.43267 3.44362C7.39016 3.17077 7.57689 2.91512 7.84974 2.87261Z\"\n        fill=\"black\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.5 14.6666C1.5 14.3905 1.72386 14.1666 2 14.1666H14C14.2761 14.1666 14.5 14.3905 14.5 14.6666C14.5 14.9428 14.2761 15.1666 14 15.1666H2C1.72386 15.1666 1.5 14.9428 1.5 14.6666Z\"\n        fill=\"black\"\n      />\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { StyledSvg } from '../../ui-styled-components/common';\n\ntype MoreCircleSvgPropsType = {\n  onClick: (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => any;\n};\n/**\n * SVG иконка, круг и 3 точки внутри\n * Принимает пропсы :\n * @param {(e:React.MouseEvent<SVGSVGElement, MouseEvent>) => any} props.onClick\n */\nexport const MoreCircleSvg = (props: MoreCircleSvgPropsType) => {\n  return (\n    <StyledSvg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      onClick={(e) => props.onClick(e)}\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"8.5\" stroke=\"#0D0C0B\" />\n      <circle cx=\"12.0005\" cy=\"8.50024\" r=\"0.875\" fill=\"black\" />\n      <circle cx=\"12.0005\" cy=\"11.9998\" r=\"0.875\" fill=\"black\" />\n      <circle cx=\"12.0005\" cy=\"15.5\" r=\"0.875\" fill=\"black\" />\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { StyledSvg } from '../../ui-styled-components/common';\n\n/**\n * SVG иконка указывающая на выход\n */\nexport const PersonPentagramSvg = () => {\n  return (\n    <StyledSvg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M21.08 8.58003V15.42C21.08 16.54 20.48 17.58 19.51 18.15L13.57 21.58C12.6 22.14 11.4 22.14 10.42 21.58L4.48003 18.15C3.51003 17.59 2.91003 16.55 2.91003 15.42V8.58003C2.91003 7.46003 3.51003 6.41999 4.48003 5.84999L10.42 2.42C11.39 1.86 12.59 1.86 13.57 2.42L19.51 5.84999C20.48 6.41999 21.08 7.45003 21.08 8.58003Z\"\n        stroke=\"black\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M12 11.0001C13.2869 11.0001 14.33 9.95687 14.33 8.67004C14.33 7.38322 13.2869 6.34009 12 6.34009C10.7132 6.34009 9.67004 7.38322 9.67004 8.67004C9.67004 9.95687 10.7132 11.0001 12 11.0001Z\"\n        stroke=\"black\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M16 16.6601C16 14.8601 14.21 13.4001 12 13.4001C9.79 13.4001 8 14.8601 8 16.6601\"\n        stroke=\"black\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { StyledSvg } from '../../ui-styled-components/common';\n\ntype PlusInCircleSVGPropsType = {\n  onClick?: (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => any;\n  width?: number;\n  height?: number;\n};\n/**\n * JSX Component( PlusInCircleSVG )\n * Принимает пропсы :\n * @param {e:React.MouseEvent<SVGSVGElement, MouseEvent>) => any} props.onClick\n */\nexport const PlusInCircleSVG = (props: PlusInCircleSVGPropsType) => {\n  const { width = 50, height = 50 } = props;\n\n  return (\n    <StyledSvg\n      width={width}\n      height={height}\n      viewBox={`-5 -4 24 24`}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      onClick={props.onClick}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M0.833374 8.00004C0.833374 4.05723 4.05723 0.833374 8.00004 0.833374C11.9428 0.833374 15.1667 4.05723 15.1667 8.00004C15.1667 11.9428 11.9428 15.1667 8.00004 15.1667C4.05723 15.1667 0.833374 11.9428 0.833374 8.00004ZM8.00004 1.83337C4.60952 1.83337 1.83337 4.60952 1.83337 8.00004C1.83337 11.3906 4.60952 14.1667 8.00004 14.1667C11.3906 14.1667 14.1667 11.3906 14.1667 8.00004C14.1667 4.60952 11.3906 1.83337 8.00004 1.83337Z\"\n        fill=\"black\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.83337 8C4.83337 7.72386 5.05723 7.5 5.33337 7.5H10.6667C10.9428 7.5 11.1667 7.72386 11.1667 8C11.1667 8.27614 10.9428 8.5 10.6667 8.5H5.33337C5.05723 8.5 4.83337 8.27614 4.83337 8Z\"\n        fill=\"black\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8 4.83337C8.27614 4.83337 8.5 5.05723 8.5 5.33337V10.6667C8.5 10.9428 8.27614 11.1667 8 11.1667C7.72386 11.1667 7.5 10.9428 7.5 10.6667V5.33337C7.5 5.05723 7.72386 4.83337 8 4.83337Z\"\n        fill=\"black\"\n      />\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { StyledSvg } from '../../ui-styled-components/common';\n\n/**\n * SVG иконка указывающая на выход\n */\nexport const PlusPersonSvg = () => {\n  return (\n    <StyledSvg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M18.5 19.5H14.5\"\n        stroke=\"black\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M16.5 21.5V17.5\"\n        stroke=\"black\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M12.16 10.87C12.06 10.86 11.94 10.86 11.83 10.87C9.45 10.79 7.56 8.84 7.56 6.44C7.55 3.99 9.54 2 11.99 2C14.44 2 16.43 3.99 16.43 6.44C16.43 8.84 14.53 10.79 12.16 10.87Z\"\n        stroke=\"black\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M11.99 21.81C10.17 21.81 8.35999 21.35 6.97999 20.43C4.55999 18.81 4.55999 16.17 6.97999 14.56C9.72999 12.72 14.24 12.72 16.99 14.56\"\n        stroke=\"black\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { StyledSvg, StyledSvgProps } from '../../ui-styled-components/common';\n\n/**\n * JSX Component ( RefreshSvg )\n * Отрисовка конкретной свг\n * Принимает в себя пропсы :\n * margin - отступы снаружи\n */\nexport const RefreshSvg = (props: StyledSvgProps) => {\n  return (\n    <StyledSvg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M21.6601 10.37C21.6937 10.3109 21.7173 10.2467 21.7301 10.18L22.4801 6.18C22.5278 5.91478 22.4682 5.64146 22.3145 5.42017C22.1607 5.19888 21.9253 5.04774 21.6601 5C21.3949 4.95226 21.1215 5.01183 20.9003 5.16561C20.679 5.31939 20.5278 5.55478 20.4801 5.82L20.1101 7.82C19.2777 6.29992 18.0337 5.04521 16.5209 4.19978C15.008 3.35436 13.2875 2.95244 11.5566 3.04013C9.82579 3.12782 8.1547 3.70157 6.73502 4.69557C5.31535 5.68957 4.20457 7.06357 3.53008 8.66C3.43114 8.90537 3.43347 9.17995 3.53655 9.42361C3.63964 9.66726 3.83508 9.86014 4.08008 9.96C4.20213 10.0105 4.33299 10.0364 4.4651 10.0361C4.5972 10.0357 4.72793 10.0092 4.84974 9.95809C4.97154 9.90696 5.08201 9.83219 5.17475 9.73811C5.26749 9.64404 5.34068 9.53252 5.39008 9.41C5.92861 8.0868 6.85484 6.95747 8.04705 6.1704C9.23927 5.38332 10.6417 4.97532 12.0701 5C13.3334 4.99411 14.5758 5.3221 15.6716 5.95076C16.7673 6.57943 17.6776 7.48645 18.3101 8.58L16.6601 8.31C16.5288 8.28899 16.3946 8.29405 16.2652 8.32489C16.1358 8.35573 16.0138 8.41175 15.9061 8.48976C15.7984 8.56776 15.7071 8.66621 15.6374 8.7795C15.5678 8.89278 15.5211 9.01868 15.5001 9.15C15.4791 9.28132 15.4841 9.4155 15.515 9.54486C15.5458 9.67423 15.6018 9.79625 15.6798 9.90397C15.7578 10.0117 15.8563 10.103 15.9696 10.1726C16.0829 10.2423 16.2088 10.289 16.3401 10.31L20.5901 11.02H20.7501C20.8662 11.0214 20.9815 11.001 21.0901 10.96C21.1267 10.9461 21.1606 10.9258 21.1901 10.9C21.2618 10.8733 21.3292 10.8363 21.3901 10.79L21.4701 10.69C21.5219 10.6414 21.5688 10.5878 21.6101 10.53C21.6344 10.4794 21.6512 10.4255 21.6601 10.37Z\"\n        fill=\"black\"\n      />\n      <path\n        d=\"M19.8799 14.0699C19.7572 14.0197 19.6258 13.9943 19.4932 13.9953C19.3607 13.9963 19.2296 14.0237 19.1077 14.0758C18.9858 14.1279 18.8755 14.2037 18.7832 14.2989C18.6908 14.394 18.6184 14.5065 18.5699 14.6299C18.0276 15.9392 17.1049 17.0557 15.9211 17.8347C14.7373 18.6138 13.3469 19.0197 11.9299 18.9999C10.6666 19.0058 9.42421 18.6779 8.32844 18.0492C7.23267 17.4205 6.32244 16.5135 5.68993 15.4199L7.33993 15.6899H7.49993C7.76514 15.7112 8.02792 15.6262 8.23046 15.4536C8.433 15.2811 8.55871 15.0352 8.57993 14.7699C8.60114 14.5047 8.51613 14.2419 8.3436 14.0394C8.17107 13.8369 7.92514 13.7112 7.65992 13.6899L3.40993 12.9999C3.30084 12.9798 3.18901 12.9798 3.07993 12.9999H2.99993C2.88675 13.03 2.77884 13.0773 2.67993 13.1399C2.6125 13.192 2.55201 13.2525 2.49993 13.3199L2.40993 13.4199C2.37902 13.4802 2.35551 13.544 2.33993 13.6099C2.30488 13.6611 2.28103 13.719 2.26993 13.7799L1.51993 17.7799C1.48781 17.9129 1.48328 18.0509 1.50664 18.1857C1.52999 18.3204 1.58072 18.4489 1.6557 18.5632C1.73068 18.6775 1.8283 18.7753 1.94255 18.8504C2.0568 18.9255 2.18523 18.9764 2.31993 18.9999H2.49993C2.73671 19.0038 2.96719 18.9235 3.15031 18.7733C3.33344 18.6232 3.45733 18.4129 3.49993 18.1799L3.86993 16.1799C4.70144 17.7004 5.94463 18.9557 7.45693 19.802C8.96923 20.6482 10.6894 21.0511 12.4202 20.9645C14.151 20.8778 15.8224 20.3051 17.2426 19.3121C18.6628 18.319 19.7744 16.9458 20.4499 15.3499C20.5416 15.1045 20.5332 14.8328 20.4266 14.5934C20.32 14.354 20.1237 14.1661 19.8799 14.0699Z\"\n        fill=\"black\"\n      />\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { StyledSvg } from '../../ui-styled-components/common';\n\n/**\n * SVG иконка указывающая на выход\n */\nexport const SmallBlackCircleSvg = () => {\n  return (\n    <StyledSvg\n      width=\"3\"\n      height=\"5\"\n      viewBox=\"0 0 3 3\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      margin={'0 5px 0 5px'}\n    >\n      <circle cx=\"1.5\" cy=\"1.5\" r=\"1.5\" fill=\"black\" />\n    </StyledSvg>\n  );\n};\n","import React from 'react';\n\nimport { createTitle } from '../../helpers/commonHelpersFunctions';\nimport { BasicTable } from '../BasicTable/BasicTable';\n\n/**\n * JSX Component( TeamHistoryTable )\n * Рисует таблицу с историей команд\n */\nexport const TeamHistoryTable = () => {\n  const titles = [\n    createTitle('15%', 'Name team'),\n    createTitle('15%', 'Level team'),\n    createTitle('15%', 'Join date'),\n    createTitle('15%', 'Out date'),\n  ];\n\n  const createRow = (\n    name: string,\n    levelTeam: number,\n    joinDate: string,\n    outDate: string\n  ) => ({ name, levelTeam, joinDate, outDate });\n\n  const rows = [\n    createRow('Спелые персики', 12, '12.12.2021', '12.12.2021'),\n    createRow('Спелые персики', 12, '12.12.2021', '12.12.2021'),\n    createRow('Спелые персики', 12, '12.12.2021', '12.12.2021'),\n    createRow('Спелые персики', 12, '12.12.2021', '12.12.2021'),\n    createRow('Спелые персики', 12, '12.12.2021', '12.12.2021'),\n    createRow('Спелые персики', 12, '12.12.2021', '12.12.2021'),\n  ];\n\n  return <BasicTable titles={titles} rows={rows} minWidthTable={'1500px'} />;\n};\n","import React, { MouseEventHandler } from 'react';\n\nimport { nanoid } from 'nanoid';\n\nimport { Block, Text } from '../../../ui-styled-components/common';\n\ntype ToggleItemPropsType = {\n  title: string;\n  active: boolean;\n  onClick: MouseEventHandler;\n};\n/**\n * JSX Component( ToggleItem )\n * Надпись подчеркивающаяся снизу линией , цвета зависящего от текущего выбора\n * Та надпись на которую выпал выбор будет подсвечиваться голубоватым цветом.\n * Неактивная запись будет подсвечиваться серым\n * Принимает пропсы :\n * @param {string} props.title назвагие выбора\n * @param {boolean} props.active меняет цвета в зависимости от значения #366EFF - true , #A6A295 - false\n */\nexport const ToggleItem = (props: ToggleItemPropsType) => {\n  const color = props.active ? '#366EFF' : '#A6A295';\n\n  return (\n    <Block\n      name={'Toggle item'}\n      width={'50%'}\n      height={'60px'}\n      borderBottom={`2px solid ${color}`}\n      {...props}\n      cursor={'pointer'}\n      key={nanoid()}\n    >\n      <Text color={color}>{props.title}</Text>\n    </Block>\n  );\n};\n","import React from 'react';\n\nimport { nanoid } from 'nanoid';\n\nimport { Block } from '../../ui-styled-components/common';\n\nimport { ToggleItem } from './ToggleItem/ToggleItem';\n\nexport type ToggleBarPropsType = {\n  selectedValue: string;\n  values: string[];\n  selectValue: (value: string) => void;\n};\n/**\n * JSX Component( ToggleBar )\n * Принимает пропсы :\n * @param {string} props.selectedValue Выбранное значение ( Обязательный )\n * @param {string[]} props.values список значение для отрисовка кнопки выбора ( Обязательный )\n * @param {(value:string) => void} props.selectValue функция для выбора значения ( Обязательный )\n */\nexport const ToggleBar = (props: ToggleBarPropsType) => {\n  //-----------------------------------------------JSX-----------------------------------------------\n\n  return (\n    <Block name={'Toggle'} width={'100%'}>\n      {props.values.map((value) => {\n        return (\n          <ToggleItem\n            key={nanoid()}\n            title={value}\n            active={value === props.selectedValue}\n            onClick={() => props.selectValue(value)}\n          />\n        );\n      })}\n    </Block>\n  );\n};\n"],"names":["createTitle","width","value","padding","chooseColorFromStatus","status","Block","styled","div","props","display","flexDirection","justifyContent","alignItems","minWidth","height","minHeight","margin","background","boxShadow","border","flexWrap","borderRadius","cursor","borderBottom","borderTop","borderLeft","borderRight","overflowY","overflowX","overflow","StyledSvg","svg","StyledSelect","Select","Text","span","fontSize","fontWeight","font","opacityText","color","StyledButton","button","StyledKeyboardArrowDownIcon","KeyboardArrowDownIcon","BasicButton","normalStyleProps","mode","React","style","onClick","e","icon","text","BasicDatePicker","setValue","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","onChange","changeDate","renderInput","params","TextField","size","sx","input","BasicInput","defaultStyle","positionIcon","placeholder","OutlinedInput","event","currentTarget","startAdornment","InputAdornment","position","SearchIcon","BasicModal","open","onClose","title","children","mainContentStyle","titleStyle","dialogProps","onCancel","onSubmit","onCancelText","onSubmitText","customFooter","isDarkTheme","useTheme","palette","defaultTitleStyle","lineHeight","Dialog","PaperProps","backgroundColor","backgroundImage","maxWidth","Box","Grid","container","direction","IconButton","CloseIcon","name","BasicSelect","useState","FormControl","fullWidth","displayEmpty","target","onSelect","renderValue","opacity","colorText","label","IconComponent","classes","className","colorIcon","options","map","option","MenuItem","key","nanoid","BasicPagination","memo","currentPage","countOnPages","setCurrentPage","onSelectCountOnPage","countPages","subTitlePagination","optionsCountOnPage","defaultCurrentPage","setDefaultCurrentPage","defaultCountOnPages","setDefaultCountOnPages","Pagination","count","Math","round","variant","shape","page","_event","toString","CustomTableBody","rows","row","Object","keys","index","currentRow","columnStyle","CustomTableHead","titles","BasicTable","minWidthTable","paginationOptions","BoxWithLabel","FilterPanel","commonSelectStyle","firstSelectLabel","firstSelectOptions","firstSelectOnSelect","secondSelectLabel","secondSelectOptions","secondSelectOnSelect","inputPlaceholder","inputOnChange","inputValue","ArrowLeftSvg","viewBox","fill","xmlns","d","stroke","strokeWidth","NavigateText","navigate","useNavigate","navigatePath","TitleAndButton","buttonText","InfoBar","navigateText","buttonOnClick","subInfoBlock","LogoutSVG","id","fillRule","clipRule","mask","MenuBaraSvg","strokeLinecap","strokeLinejoin","NavBar","AddUserSvg","BlackTriangleDownSvg","marginRight","BlackTriangleUpSvg","EditPencilSvg","MoreCircleSvg","cx","cy","r","PersonPentagramSvg","PlusInCircleSVG","PlusPersonSvg","RefreshSvg","SmallBlackCircleSvg","TeamHistoryTable","createRow","levelTeam","joinDate","outDate","ToggleItem","active","ToggleBar","values","selectedValue","selectValue"],"mappings":"svBAOaA,EAAc,SACzBC,EACAC,EACAC,GAHyB,MAIL,CAAEF,MAAAA,EAAOC,MAAAA,EAAOC,QAAAA,IAMzBC,EAAwB,SAACC,GACpC,OAAQA,GACN,IAAK,SACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,WACH,MAAO,UACT,IAAK,aACH,MAAO,UACT,QACE,MAAO,sSCmCAC,EAAQC,EAAOC,qgBACf,SAACC,GAAD,OAAwBA,EAAMC,QAAUD,EAAMC,QAAU,UACjD,SAACD,GAAD,OAChBA,EAAME,cAAgBF,EAAME,cAAgB,SAC3B,SAACF,GAAD,OACjBA,EAAMG,eAAiBH,EAAMG,eAAiB,YACjC,SAACH,GAAD,OACbA,EAAMI,WAAaJ,EAAMI,WAAa,YAC/B,SAACJ,GAAD,OAAwBA,EAAMR,MAAQQ,EAAMR,MAAQ,UAChD,SAACQ,GAAD,OACXA,EAAMK,SAAWL,EAAMK,SAAW,UAC1B,SAACL,GAAD,OAAwBA,EAAMM,OAASN,EAAMM,OAAS,UAClD,SAACN,GAAD,OACZA,EAAMO,UAAYP,EAAMO,UAAY,UAC3B,SAACP,GAAD,OAAwBA,EAAMN,QAAUM,EAAMN,QAAU,KACzD,SAACM,GAAD,OAAwBA,EAAMQ,OAASR,EAAMQ,OAAS,KAClD,SAACR,GAAD,OACZA,EAAMS,WAAaT,EAAMS,WAAa,UAC1B,SAACT,GAAD,OACZA,EAAMU,UAAYV,EAAMU,UAAY,UAC5B,SAACV,GAAD,OAAwBA,EAAMW,OAASX,EAAMW,OAAS,OACnD,SAACX,GAAD,OACXA,EAAMY,SAAWZ,EAAMY,SAAW,UACnB,SAACZ,GAAD,OACfA,EAAMa,aAAeb,EAAMa,aAAe,OAClC,SAACb,GAAD,OAAwBA,EAAMc,OAASd,EAAMc,OAAS,UAC/C,SAACd,GAAD,OACfA,EAAMe,aAAef,EAAMe,aAAe,UAC9B,SAACf,GAAD,OACZA,EAAMgB,UAAYhB,EAAMgB,UAAY,UACvB,SAAChB,GAAD,OACbA,EAAMiB,WAAajB,EAAMiB,WAAa,UACxB,SAACjB,GAAD,OACdA,EAAMkB,YAAclB,EAAMkB,YAAc,UAC5B,SAAClB,GAAD,OACZA,EAAMmB,UAAYnB,EAAMmB,UAAY,MACxB,SAACnB,GAAD,OACZA,EAAMoB,UAAYpB,EAAMoB,UAAY,MAC1B,SAACpB,GAAD,OAAwBA,EAAMqB,SAAWrB,EAAMqB,SAAW,MAe3DC,EAAYxB,EAAOyB,0DAEpB,SAACvB,GAAD,OACRA,EAAMQ,OAASR,EAAMQ,OAAS,gBAqBrBgB,EAAe1B,EAAO2B,EAAP3B,mFACjB,SAACE,GAAD,OAA+BA,EAAMR,MAAQQ,EAAMR,MAAQ,UAC1D,SAACQ,GAAD,OACRA,EAAMM,OAASN,EAAMM,OAAS,UACrB,SAACN,GAAD,OAA+BA,EAAMN,QAAUM,EAAMN,QAAU,KAChE,SAACM,GAAD,OACRA,EAAMW,OAASX,EAAMW,OAAS,UA6BrBe,EAAO5B,EAAO6B,4LACZ,SAAC3B,GAAD,OACXA,EAAM4B,SAAW5B,EAAM4B,SAAW,UACrB,SAAC5B,GAAD,OACbA,EAAM6B,WAAa7B,EAAM6B,WAAa,SACzB,SAAC7B,GAAD,OACXA,EAAM8B,KAAO9B,EAAM8B,KAAO,oBAEnB,SAAC9B,GAAD,OACTA,EAAM+B,YAAc/B,EAAM+B,YAAc,OAChC,SAAC/B,GAAD,OAAuBA,EAAMQ,OAASR,EAAMQ,OAAS,OACtD,SAACR,GAAD,OAAuBA,EAAMgC,MAAQhC,EAAMgC,MAAQ,WAClD,SAAChC,GAAD,OAAuBA,EAAMc,OAASd,EAAMc,OAAS,UAC9C,SAACd,GAAD,OACfA,EAAMe,aAAef,EAAMe,aAAe,OA6BjCkB,EAAenC,EAAOoC,gQAKxB,SAAClC,GAAD,OAA+BA,EAAMR,MAAQQ,EAAMR,MAAQ,UAC1D,SAACQ,GAAD,OACRA,EAAMM,OAASN,EAAMM,OAAS,UAClB,SAACN,GAAD,OACZA,EAAMS,WAAaT,EAAMS,WAAa,aAC1B,SAACT,GAAD,OACZA,EAAMU,UAAYV,EAAMU,UAAY,UACrB,SAACV,GAAD,OACfA,EAAMa,aAAeb,EAAMa,aAAe,SAClC,SAACb,GAAD,OACRA,EAAMW,OAASX,EAAMW,OAAS,UACtB,SAACX,GAAD,OAA+BA,EAAMQ,OAASR,EAAMQ,OAAS,OAC9D,SAACR,GAAD,OAA+BA,EAAMgC,MAAQhC,EAAMgC,MAAQ,WAWzDG,EAA8BrC,EAAOsC,EAAPtC,wIChO9BuC,EAAc,SAACrC,GAC1B,IAAMsC,EAAmB,CACvB5B,UACE,qFACFlB,MAAO,QACPc,OAAQ,OACRE,OAAQR,EAAMQ,OAASR,EAAMQ,OAAS,oBACtCK,aAAc,OAGhB,OAAQb,EAAMuC,MACZ,IAAK,SACH,OACEC,gBAACP,GACCQ,MACEzC,EAAMyC,WACGH,EAAqBtC,EAAMyC,OAChCH,EAENI,QAAS,SAACC,GAAD,OACP3C,EAAM0C,SAAW1C,EAAM0C,QAAQC,KAGhC3C,EAAM4C,MAAQ5C,EAAM4C,KACrBJ,gBAACd,GAAKI,KAAM,gBAAiBhB,OAAQ,WAClCd,EAAM6C,OAIf,IAAK,cACH,OACEL,gBAACP,GACCxB,WAAY,OACZiC,QAAS,SAACC,GAAD,OACP3C,EAAM0C,SAAW1C,EAAM0C,QAAQC,KAGhC3C,EAAM4C,MAAQ5C,EAAM4C,KACrBJ,gBAACd,GAAKI,KAAM,gBAAiBD,WAAY,IAAKf,OAAQ,WACnDd,EAAM6C,OAIf,IAAK,MACH,OACEL,gBAACP,GACCQ,MACEzC,EAAMyC,WACGH,EAAqBtC,EAAMyC,OAChCH,EAEN7B,WAAY,UACZjB,MAAO,QACPkD,QAAS,SAACC,GAAD,OACP3C,EAAM0C,SAAW1C,EAAM0C,QAAQC,KAGhC3C,EAAM4C,MAAQ5C,EAAM4C,KACrBJ,gBAACd,GAAKM,MAAO,QAASlB,OAAQ,WAC3Bd,EAAM6C,OAIf,IAAK,oBACH,OACEL,gBAACP,GACCQ,MACEzC,EAAMyC,WACGH,EAAqBtC,EAAMyC,OAChCH,EAEN7B,WAAY,OACZE,cAAeX,EAAMgC,eACrBxC,MAAO,QACPkD,QAAS,SAACC,GAAD,OACP3C,EAAM0C,SAAW1C,EAAM0C,QAAQC,KAGhC3C,EAAM4C,MAAQ5C,EAAM4C,KACrBJ,gBAACd,GAAKM,MAAOhC,EAAMgC,MAAOlB,OAAQ,WAC/Bd,EAAM6C,OAIf,QACE,OACEL,gBAACP,GACCQ,MACEzC,EAAMyC,WACGH,EAAqBtC,EAAMyC,OAChCH,EAENI,QAAS,SAACC,GAAD,OACP3C,EAAM0C,SAAW1C,EAAM0C,QAAQC,KAGhC3C,EAAM4C,MAAQ5C,EAAM4C,KACrBJ,gBAACd,GAAKI,KAAM,gBAAiBhB,OAAQ,WAClCd,EAAM6C,kBC5GHC,EAAgB9C,GAC9B,MAA0BwC,EAA6BxC,EAAMP,OAA/CsD,OAOd,OACEP,EAACQ,GAAqBC,YAAaC,GACjCV,EAACW,GACC1D,WACA2D,SAToB,SAAC3D,GACzBsD,EAAStD,GACTO,EAAMqD,WAAW5D,IAQb6D,YAAa,SAAAC,GAAM,OACjBf,EAACgB,mBACKD,GACJE,KAAM,QACNC,GAAI,CACFC,MAAO,CACLjE,QAAS,0BCPZkE,EAAa,SAAC5D,GAIzB,IAAM6D,EAAe,CAAErE,MAAO,OAAQc,OAAQ,UAS1CN,EAHF8D,aAAAA,aAL0B,YAQxB9D,EAFF0D,GAAAA,aAAKG,IACLE,EACE/D,EADF+D,YAGF,OAAQ/D,EAAMuC,MACZ,IAAK,SACH,OACEC,gBAACwB,GACCD,YAAaA,EACbL,QAASG,EAAiBH,GAC1BjE,MAAOO,EAAMP,MACb2D,SAAU,SAACa,GAAD,OAAWjE,EAAMoD,SAASa,EAAMC,cAAczE,QACxD0E,eACE3B,gBAAC4B,GAAeC,SAAUP,GACxBtB,gBAAC8B,WAMX,IAAK,OACH,OACE9B,gBAACwB,GACCD,YAAaA,EACbL,QAASG,EAAiBH,GAC1BjE,MAAOO,EAAMP,MACb2D,SAAU,SAACa,GAAD,OAAWjE,EAAMoD,SAASa,EAAMC,cAAczE,UAI9D,QACE,OAAO+C,gBAACwB,UChBDO,EAAa,gBACxBC,IAAAA,KACAC,IAAAA,QACAC,IAAAA,MACAC,IAAAA,SACAnF,IAAAA,MACAoF,IAAAA,iBACAC,IAAAA,WACAC,IAAAA,YACAC,IAAAA,SACAC,IAAAA,aACAC,aAAAA,aAAe,eACfC,aAAAA,aAAe,WACfC,IAAAA,aAMMC,EAAqC,SAD7BC,IACYC,QAAQ/C,KAE5BE,EAAQmC,GAEV,CACEpF,MAAOA,GAAS,IAChBkB,UAAW,GACX2D,SAAU,YAEVkB,EAAoBV,GAEtB,CACEhD,WAAY,IACZD,SAAU,OACV4D,WAAY,QA2BlB,OACEhD,gBAACiD,iBACCjB,KAAMA,EACNC,QAASA,EACTiB,WAAY,CACVhC,GAAI,CACFiC,gBAAiBP,EAAc,UAAY,UAC3CQ,gBAAiB,OACjBC,SAAU,UAGVf,GAEJtC,gBAACsD,GAAIpC,GAAIjB,GACPD,gBAACuD,GACCC,aACAC,UAAU,MACV9F,eAAgB,gBAChBC,WAAY,SACZqC,MAAO,CACL/C,QAAS,SACTY,OAAQ,OACRS,aAAcqE,EACV,+BACA,sBAGN5C,gBAACsD,GAAIpC,GAAI6B,GACP/C,8BAASkC,IAEXlC,gBAACsD,GAAI3F,eAAe,SAASC,WAAW,SAASH,QAAQ,QACvDuC,gBAAC0D,GAAWxD,QAAS+B,EAAShB,KAAK,SACjCjB,gBAAC2D,WAKP3D,gBAACuD,GAAKtD,MAAO,CAAE/C,QAAS,sBAAuB2B,SAAU,SACtDsD,GAEFQ,GAGC3C,gBAAC3C,GACCuG,KAAM,UACN1G,QAAS,OACTS,eAAgB,iBAEhBqC,gBAACH,GACCE,KAAM,SACNM,KAAMoC,EACNvC,QApEU,WACpBqC,GAAYA,IACZN,OAoEQjC,gBAACH,GACCE,KAAM,MACNM,KAAMqC,EACNxC,QA/DU,WACpBsC,GAAYA,IACZP,oBCpEY4B,EAAYrG,GAG1B,MAA0BsG,EAAiB,IAApC7G,OAAOsD,SAKV/C,EAHFK,WAGEL,EAFFyD,KAAAA,aAAO,YAELzD,EADFM,OAeF,OACIkC,gBAACsD,GAAIpC,GAAI,CAACrD,oBAlBD,MAkBqBG,OAAQR,EAAMQ,SAC1CgC,gBAAC+D,GAAYC,aAAU9C,MAAKpD,kBAjBvB,UAiB0CN,EAAM0D,KACnDlB,gBAAChB,GACGiF,gBACAhH,MAAOA,EACP2D,SAbS,SAACa,GACpBlB,EAASkB,EAAMyC,OAAOjH,OACtBO,EAAM2G,UAAY3G,EAAM2G,SAAS1C,EAAMyC,OAAOjH,QAYpCkE,MAAOnB,gBAACwB,QACRP,KAAMA,EACNmD,YAAa,SAACnH,GAAD,OAAWA,GACpB+C,sBAAIC,MAAO,CAACoE,QAAS7G,EAAM+B,YAAYC,MAAMhC,EAAM8G,YAAa9G,EAAM+G,QAE1EC,cAAe,SAACC,GACd,OAAOzE,gBAACL,GAA4B+E,UAAWD,EAAQC,UAAWxD,GAAI,CAAC1B,MAAMhC,EAAMmH,eAGtFnH,EAAMoH,QAAQC,KAAI,SAACC,GAAD,OAAY9E,gBAAC+E,GAASC,IAAKC,IAAUhI,MAAO6H,GAASA,aCzCvEI,EAAkBC,GAC7B,oBACEC,gBACAC,aAAAA,aAAe,KACfC,IAAAA,eACAC,IAAAA,wBACAC,WAAAA,aAAa,IACbC,IAAAA,uBACAC,mBAAAA,aAAqB,CAAC,EAAG,GAAI,GAAI,QAImB5B,aAVtC,KAUP6B,OAAoBC,SAC2B9B,EAEpDuB,GAFKQ,OAAqBC,OA0B5B,OACE9F,gBAAC3C,GAAMuG,KAAM,uBACX5D,gBAAC+F,GACCC,MAAOC,KAAKC,MAAMV,GAClBW,QAAQ,WACRC,MAAM,UACN5G,MAAM,UACN6G,KAAMV,EACN/E,SAvBoB,SAAC0F,EAA8BD,GACvDf,GAAkBA,EAAee,GACjCT,EAAsBS,MAuBpBrG,gBAAC3C,GAAMuG,KAAM,YAAa5F,OAAQ,iBAChCgC,gBAACd,GAAKlB,OAAQ,sBACdgC,gBAAC6D,GACCU,MAAOsB,EAAoBU,WAC3B3B,QAASc,EACTvB,SArByB,SAAClH,GAChCsI,GAAuBA,EAAoBtI,GAC3C6I,EAAuB7I,IAoBjBY,SAAU,GACVC,OAAQ,MAGZkC,gBAAC3C,GAAMuG,KAAM,sBACV6B,GAAsBzF,4BAAOyF,QCtE3Be,EAAkB,SAAChJ,GAC5B,OACIwC,gBAAC3C,GACGuG,KAAM,aACN5G,MAAO,OACPS,QAAS,QACTI,SAAUL,EAAMK,UAEfL,EAAMiJ,KAAK5B,KAAI,SAAC6B,GAAD,OACZ1G,gBAAC3C,GACGuG,KAAM,YACNoB,IAAKC,IACLtH,eAAgB,aAChBX,MAAO,OACPc,OAAQ,OACRS,aAAc,oBACdH,SAAU,UAITuI,OAAOC,KAAKF,GAAK7B,KAAI,SAACG,EAAK6B,GAExB,IAAMC,EAAaJ,EAAI1B,GACvB,OACIhF,gBAAC3C,GACGuG,KAAM,YACNoB,IAAKC,IACLjH,OAAQ,aACRd,QAASM,EAAMuJ,YAAYF,GAAO3J,QAClCS,eAAgBmJ,GAChBA,EAAWnJ,eACLmJ,EAAWnJ,eACX,aAENX,MAAOQ,EAAMuJ,YAAYF,GAAO7J,OAE/B8J,GAAcA,EAAW7J,MAAQ6J,EAAW7J,MAAQ6J,YC3CxEE,EAAkB,SAACxJ,GAC9B,OACEwC,gBAAC3C,GACCuG,KAAM,aACN3F,WAAY,UACZjB,MAAO,OACPW,eAAgB,aAChBG,OAAQ,OACRD,SAAUL,EAAMK,UAEfL,EAAMyJ,OAAOpC,KAAI,SAAC3C,GAAD,OAChBlC,gBAAC3C,GACCuG,KAAM,QACNoB,IAAKC,IACL7G,SAAU,SACVpB,MAAOkF,EAAMlF,MACbgB,OAAQ,aACRd,QAASgF,EAAMhF,QACfS,eAAgB,cAEhBqC,8BAASkC,EAAMjF,aCMZiK,EAAa,SAAC1J,GAGzB,OACEwC,gBAAC3C,GACCuG,KAAM,iCACN5G,MAAO,OACPgB,OAAQ,aACRP,QAAS,SAETuC,gBAAC3C,GAAMuG,KAAM,kBAAmBnG,QAAS,QAASoB,SAAU,QAC1DmB,gBAACgH,GAAgBC,OAAQzJ,EAAMyJ,OAAQpJ,SAAUL,EAAM2J,gBACvDnH,gBAACwG,GACCC,KAAMjJ,EAAMiJ,KACZ5I,SAAUL,EAAM2J,cAChBJ,YAAavJ,EAAMyJ,OAAOpC,KAAI,SAAC3C,GAAD,MAAY,CACxClF,MAAOkF,EAAMlF,MACbE,QAASgF,EAAMhF,eAKrB8C,gBAAC3C,GACCuG,KAAM,aACN5G,MAAO,OACPW,eAAgB,aAChBK,OAAQ,kBAERgC,gBAACkF,mBAAoB1H,EAAM4J,uBC1DtBC,EAAe,SAAC7J,GAIzB,MAAmCA,EAA5BQ,OAIP,OACIgC,gBAAC3C,GACGuG,KAAM,oBACNlG,cAAe,SACfE,WAAY,aACZI,kBATQ,mBAWRgC,gBAACd,GAAKK,YAAa,GAAKH,SAAU,OAAQpB,OAAQ,aAC7CR,EAAM+G,OAEV/G,EAAM2E,WCDNmF,EAAc,SAAC9J,GAM1B,IAAM+J,EAAoB,CACxBvJ,OAAQ,aACRH,SAAU,OAKZ,OACEmC,gBAAC3C,GACCuG,KAAM,eACN5G,MAAO,OACPgB,OAAQ,aACRL,eAAgB,iBAEhBqC,gBAAC6D,iBACCU,MAAO/G,EAAMgK,iBACb5C,QAASpH,EAAMiK,mBACftD,SAAU3G,EAAMkK,qBACZH,IAENvH,gBAAC6D,iBACCU,MAAO/G,EAAMmK,kBACb/C,QAASpH,EAAMoK,oBACfzD,SAAU3G,EAAMqK,sBACZN,IAENvH,gBAACoB,GACCrB,KAAM,SACNwB,YAAa/D,EAAMsK,iBACnB5G,GAAI,CAAElE,MAAO,OACb4D,SAAUpD,EAAMuK,cAChB9K,MAAOO,EAAMwK,eC5DRC,EAAe,WAC1B,OACEjI,gBAAClB,GACC9B,MAAM,KACNc,OAAO,KACPoK,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENpI,wBACEqI,EAAE,gDACFC,OAAO,QACPC,YAAY,QCCPC,EAAe,SAAChL,GAC3B,IAAMiL,EAAWC,IAEjB,OACE1I,gBAAC3C,GACCuG,KAAM,eACN5G,MAAO,OACPW,eAAgB,aAChBC,WAAY,SACZsC,QAAS,WACcuI,EAArBjL,EAAMmL,aAAwBnL,EAAMmL,cAA0B,IAEhErK,OAAQ,UACRN,OAAQ,cAERgC,gBAACiI,QACAzK,EAAM6C,OClBAuI,GAAiB,SAACpL,GAC7B,OACEwC,gBAAC3C,GACCuG,KAAM,mBACN5G,MAAO,OACPW,eAAgB,iBAEhBqC,gBAACd,GAAKG,WAAY,MAAOD,SAAU,QAChC5B,EAAM0E,OAER1E,EAAMqL,WACL7I,gBAACH,GACCE,KAAM,MACNM,KAAM7C,EAAMqL,WACZ3I,QAAS,SAACC,GAAD,OAAO3C,EAAM0C,QAAQC,MAGhCH,gBAAC3C,GAAMuG,KAAM,kBCLRkF,GAAU,SAACtL,GAGtB,OACEwC,gBAAC3C,GAAMuG,KAAM,SAAU5G,MAAO,OAAQgB,OAAQ,cAC3CR,EAAMuL,cACL/I,gBAACwI,GACCnI,KAAM7C,EAAMuL,aACZJ,aAAcnL,EAAMmL,eAGxB3I,gBAAC4I,IACC1G,MAAO1E,EAAM0E,MACb2G,WAAYrL,EAAMqL,WAClB3I,QAAS,SAACC,GAAD,OAAO3C,EAAMwL,eAAiBxL,EAAMwL,cAAc7I,MAE7DH,gBAAC3C,GAAMuG,KAAM,WAAY5G,MAAO,OAAQW,eAAgB,cACrDH,EAAMyL,gBCxCFC,GAAY,SAAC1L,GACxB,OACEwC,gBAAClB,iBACC9B,MAAM,KACNc,OAAO,KACPoK,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACF5K,GAEJwC,qBAAGqE,QAAQ,OACTrE,wBAAMmJ,GAAG,0BAA0BhB,KAAK,SACtCnI,wBACEoJ,SAAS,UACTC,SAAS,UACThB,EAAE,6WAGNrI,wBACEoJ,SAAS,UACTC,SAAS,UACThB,EAAE,0WACFF,KAAK,UAEPnI,wBACEqI,EAAE,4tCACFF,KAAK,QACLmB,KAAK,kCAEPtJ,wBACEqI,EAAE,uWACFF,KAAK,aC5BFoB,GAAc,SAAC/L,GAC1B,OACEwC,gBAAClB,iBACC9B,MAAM,KACNc,OAAO,KACPoK,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACF5K,GAEJwC,wBACEqI,EAAE,YACFC,OAAO,UACPC,YAAY,MACZiB,cAAc,QACdC,eAAe,UAEjBzJ,wBACEqI,EAAE,YACFC,OAAO,UACPC,YAAY,MACZiB,cAAc,QACdC,eAAe,UAEjBzJ,wBACEqI,EAAE,aACFC,OAAO,UACPC,YAAY,MACZiB,cAAc,QACdC,eAAe,UAEjBzJ,wBACEqI,EAAE,aACFC,OAAO,UACPC,YAAY,MACZiB,cAAc,QACdC,eAAe,YCjCVC,GAAS,WAIpB,OACE1J,gBAAC3C,GACCuG,KAAM,kBACN5G,MAAO,QACPe,UAAW,OACXE,WAAY,UACZC,UACE,sFAGF8B,gBAAC3C,GACCuG,KAAM,mBACN5G,MAAO,OACPW,eAAgB,iBAEhBqC,gBAAC3C,GACCuG,KAAM,WACNjG,eAAgB,aAChBK,OAAQ,oBAERgC,gBAACuJ,UAEHvJ,gBAAC3C,GACCuG,KAAM,YACNjG,eAAgB,aAChBX,MAAO,eAEPgD,gBAAC3C,GACCuG,KAAM,aACN5G,MAAO,QACPW,eAAgB,aAChBK,OAAQ,oBAERgC,gBAAC6D,GACCU,MAAO,cACPK,QArCU,CAAC,YAAa,YAsCxBT,SAAU,gBAGdnE,gBAAC3C,GAAMuG,KAAM,WAAY5F,OAAQ,oBAC/BgC,gBAACd,GAAKE,SAAU,QA3Cb,qBA6CLY,gBAACH,GAAYE,KAAM,SAAUK,KAAMJ,gBAACkJ,SAAc7I,KAAM,iBCrDrDsJ,GAAa,SAACnM,GACzB,OACEwC,gBAAClB,iBACC9B,MAAM,KACNc,OAAO,KACPoK,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACF5K,GAEJwC,wBACEqI,EAAE,gnBACFF,KAAK,UAEPnI,wBACEqI,EAAE,2bACFF,KAAK,UAEPnI,wBACEqI,EAAE,iTACFF,KAAK,YCnBAyB,GAAuB,WAClC,OACE5J,gBAAClB,GACC9B,MAAM,IACNc,OAAO,IACPoK,QAAQ,UACRC,KAAK,OACLC,MAAM,6BACNnI,MAAO,CAAE4J,YAAa,QAEtB7J,wBAAMqI,EAAE,oCAAoCF,KAAK,YCV1C2B,GAAqB,WAChC,OACE9J,gBAAClB,GACC9B,MAAM,IACNc,OAAO,IACPoK,QAAQ,UACRC,KAAK,OACLC,MAAM,8BAENpI,wBAAMqI,EAAE,gCAAgCF,KAAK,YCFtC4B,GAAgB,SAACvM,GAC5B,MAAoCA,EAA5BR,QAA4BQ,EAAhBM,OAEpB,OACEkC,gBAAClB,GACC9B,iBAJY,KAKZc,kBALyB,KAMzBoK,sBACAC,KAAK,OACLC,MAAM,6BACNlI,QAAS1C,EAAM0C,SAEfF,wBACEoJ,SAAS,UACTC,SAAS,UACThB,EAAE,i1CACFF,KAAK,UAEPnI,wBACEoJ,SAAS,UACTC,SAAS,UACThB,EAAE,iTACFF,KAAK,UAEPnI,wBACEoJ,SAAS,UACTC,SAAS,UACThB,EAAE,qLACFF,KAAK,YC9BA6B,GAAgB,SAACxM,GAC5B,OACEwC,gBAAClB,GACC9B,MAAM,KACNc,OAAO,KACPoK,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACNlI,QAAS,SAACC,GAAD,OAAO3C,EAAM0C,QAAQC,KAE9BH,0BAAQiK,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAAM7B,OAAO,YACvCtI,0BAAQiK,GAAG,UAAUC,GAAG,UAAUC,EAAE,QAAQhC,KAAK,UACjDnI,0BAAQiK,GAAG,UAAUC,GAAG,UAAUC,EAAE,QAAQhC,KAAK,UACjDnI,0BAAQiK,GAAG,UAAUC,GAAG,OAAOC,EAAE,QAAQhC,KAAK,YClBvCiC,GAAqB,WAChC,OACEpK,gBAAClB,GACC9B,MAAM,KACNc,OAAO,KACPoK,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENpI,wBACEqI,EAAE,8TACFC,OAAO,QACPC,YAAY,MACZiB,cAAc,QACdC,eAAe,UAEjBzJ,wBACEqI,EAAE,+LACFC,OAAO,QACPC,YAAY,MACZiB,cAAc,QACdC,eAAe,UAEjBzJ,wBACEqI,EAAE,mFACFC,OAAO,QACPC,YAAY,MACZiB,cAAc,QACdC,eAAe,YCrBVY,GAAkB,SAAC7M,GAC9B,MAAoCA,EAA5BR,QAA4BQ,EAAhBM,OAEpB,OACEkC,gBAAClB,GACC9B,iBAJY,KAKZc,kBALyB,KAMzBoK,sBACAC,KAAK,OACLC,MAAM,6BACNlI,QAAS1C,EAAM0C,SAEfF,wBACEoJ,SAAS,UACTC,SAAS,UACThB,EAAE,4aACFF,KAAK,UAEPnI,wBACEoJ,SAAS,UACTC,SAAS,UACThB,EAAE,0LACFF,KAAK,UAEPnI,wBACEoJ,SAAS,UACTC,SAAS,UACThB,EAAE,0LACFF,KAAK,YCnCAmC,GAAgB,WAC3B,OACEtK,gBAAClB,GACC9B,MAAM,KACNc,OAAO,KACPoK,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENpI,wBACEqI,EAAE,kBACFC,OAAO,QACPC,YAAY,MACZiB,cAAc,QACdC,eAAe,UAEjBzJ,wBACEqI,EAAE,kBACFC,OAAO,QACPC,YAAY,MACZiB,cAAc,QACdC,eAAe,UAEjBzJ,wBACEqI,EAAE,6KACFC,OAAO,QACPC,YAAY,MACZiB,cAAc,QACdC,eAAe,UAEjBzJ,wBACEqI,EAAE,uIACFC,OAAO,QACPC,YAAY,MACZiB,cAAc,QACdC,eAAe,YChCVc,GAAa,SAAC/M,GACzB,OACEwC,gBAAClB,iBACC9B,MAAM,KACNc,OAAO,KACPoK,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACF5K,GAEJwC,wBACEqI,EAAE,kiDACFF,KAAK,UAEPnI,wBACEqI,EAAE,y9CACFF,KAAK,YCnBAqC,GAAsB,WACjC,OACExK,gBAAClB,GACC9B,MAAM,IACNc,OAAO,IACPoK,QAAQ,UACRC,KAAK,OACLC,MAAM,6BACNpK,OAAQ,eAERgC,0BAAQiK,GAAG,MAAMC,GAAG,MAAMC,EAAE,MAAMhC,KAAK,YCRhCsC,GAAmB,WAC9B,IAAMxD,EAAS,CACblK,EAAY,MAAO,aACnBA,EAAY,MAAO,cACnBA,EAAY,MAAO,aACnBA,EAAY,MAAO,aAGf2N,EAAY,SAChB9G,EACA+G,EACAC,EACAC,GAJgB,MAKZ,CAAEjH,KAAAA,EAAM+G,UAAAA,EAAWC,SAAAA,EAAUC,QAAAA,IAE7BpE,EAAO,CACXiE,EAAU,iBAAkB,GAAI,aAAc,cAC9CA,EAAU,iBAAkB,GAAI,aAAc,cAC9CA,EAAU,iBAAkB,GAAI,aAAc,cAC9CA,EAAU,iBAAkB,GAAI,aAAc,cAC9CA,EAAU,iBAAkB,GAAI,aAAc,cAC9CA,EAAU,iBAAkB,GAAI,aAAc,eAGhD,OAAO1K,gBAACkH,GAAWD,OAAQA,EAAQR,KAAMA,EAAMU,cAAe,YCbnD2D,GAAa,SAACtN,GACzB,IAAMgC,EAAQhC,EAAMuN,OAAS,UAAY,UAEzC,OACE/K,gBAAC3C,iBACCuG,KAAM,cACN5G,MAAO,MACPc,OAAQ,OACRS,0BAA2BiB,GACvBhC,GACJc,OAAQ,UACR0G,IAAKC,MAELjF,gBAACd,GAAKM,MAAOA,GAAQhC,EAAM0E,SCbpB8I,GAAY,SAACxN,GAGxB,OACEwC,gBAAC3C,GAAMuG,KAAM,SAAU5G,MAAO,QAC3BQ,EAAMyN,OAAOpG,KAAI,SAAC5H,GACjB,OACE+C,gBAAC8K,IACC9F,IAAKC,IACL/C,MAAOjF,EACP8N,OAAQ9N,IAAUO,EAAM0N,cACxBhL,QAAS,WAAA,OAAM1C,EAAM2N,YAAYlO"}